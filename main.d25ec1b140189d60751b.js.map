{"version":3,"file":"main.d25ec1b140189d60751b.js","mappings":"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","sources":["webpack://mathboard/webpack/runtime/chunk loaded","webpack://mathboard/./src/context/AppContext.js","webpack://mathboard/./src/context/AppContextLapiz.js","webpack://mathboard/./src/context/AppContextBorrador.js","webpack://mathboard/./src/context/AppContextCuadrado.js","webpack://mathboard/./src/context/AppContextMover.js","webpack://mathboard/./src/context/AppContextCanvas.js","webpack://mathboard/./src/context/AppContextLinea.js","webpack://mathboard/./src/context/AppContextPlano.js","webpack://mathboard/./src/hooks/useInitialState.js","webpack://mathboard/./src/hooks/useMover.js","webpack://mathboard/./src/hooks/useLapiz.js","webpack://mathboard/./src/hooks/useBorrador.js","webpack://mathboard/./src/hooks/useCuadrado.js","webpack://mathboard/./src/hooks/useCanvas.js","webpack://mathboard/./src/hooks/useLinea.js","webpack://mathboard/./src/hooks/usePlano.js","webpack://mathboard/./src/containers/Menu1.jsx","webpack://mathboard/./src/containers/MenuPlano.jsx","webpack://mathboard/./src/containers/MenuMover.jsx","webpack://mathboard/./src/components/PaletaColor.jsx","webpack://mathboard/./src/components/PaletaGrosor.jsx","webpack://mathboard/./src/containers/MenuLapiz.jsx","webpack://mathboard/./src/containers/MenuBorrador.jsx","webpack://mathboard/./src/containers/MenuCuadrado.jsx","webpack://mathboard/./src/containers/MenuCuadricula.jsx","webpack://mathboard/./src/containers/MenuLinea.jsx","webpack://mathboard/./src/components/Header.jsx","webpack://mathboard/./src/components/key.jsx","webpack://mathboard/./src/components/KeySvg.jsx","webpack://mathboard/./src/components/KeyTxt.jsx","webpack://mathboard/./src/containers/Keyboard.jsx","webpack://mathboard/./src/components/NavIzq.jsx","webpack://mathboard/./src/utils/UtilsCuadricula.js","webpack://mathboard/./src/utils/UtilsCuadrado.js","webpack://mathboard/./src/utils/UtilsLinea.js","webpack://mathboard/./src/utils/UtilsLapiz.js","webpack://mathboard/./src/utils/UtilsPlano.js","webpack://mathboard/./src/utils/UtilsMover.js","webpack://mathboard/./src/utils/UtilsMoverLapiz.js","webpack://mathboard/./src/components/PaintMover.jsx","webpack://mathboard/./src/components/PaintPlano.jsx","webpack://mathboard/./src/components/Canvas.jsx","webpack://mathboard/./src/components/PaintCuadricula.jsx","webpack://mathboard/./src/components/PaintLapiz.jsx","webpack://mathboard/./src/components/PaintBorrador.jsx","webpack://mathboard/./src/components/PaintCuadrado.jsx","webpack://mathboard/./src/components/PaintLinea.jsx","webpack://mathboard/./src/pages/Home.jsx","webpack://mathboard/./src/containers/Layout.jsx","webpack://mathboard/./src/routes/App.jsx","webpack://mathboard/./src/index.js","webpack://mathboard/webpack/bootstrap","webpack://mathboard/webpack/runtime/define property getters","webpack://mathboard/webpack/runtime/global","webpack://mathboard/webpack/runtime/hasOwnProperty shorthand","webpack://mathboard/webpack/runtime/jsonp chunk loading","webpack://mathboard/webpack/startup"],"sourcesContent":["var deferred = [];\n__webpack_require__.O = function(result, chunkIds, fn, priority) {\n\tif(chunkIds) {\n\t\tpriority = priority || 0;\n\t\tfor(var i = deferred.length; i > 0 && deferred[i - 1][2] > priority; i--) deferred[i] = deferred[i - 1];\n\t\tdeferred[i] = [chunkIds, fn, priority];\n\t\treturn;\n\t}\n\tvar notFulfilled = Infinity;\n\tfor (var i = 0; i < deferred.length; i++) {\n\t\tvar chunkIds = deferred[i][0];\n\t\tvar fn = deferred[i][1];\n\t\tvar priority = deferred[i][2];\n\t\tvar fulfilled = true;\n\t\tfor (var j = 0; j < chunkIds.length; j++) {\n\t\t\tif ((priority & 1 === 0 || notFulfilled >= priority) && Object.keys(__webpack_require__.O).every(function(key) { return __webpack_require__.O[key](chunkIds[j]); })) {\n\t\t\t\tchunkIds.splice(j--, 1);\n\t\t\t} else {\n\t\t\t\tfulfilled = false;\n\t\t\t\tif(priority < notFulfilled) notFulfilled = priority;\n\t\t\t}\n\t\t}\n\t\tif(fulfilled) {\n\t\t\tdeferred.splice(i--, 1)\n\t\t\tvar r = fn();\n\t\t\tif (r !== undefined) result = r;\n\t\t}\n\t}\n\treturn result;\n};","import React from 'react';\n\nconst AppContext = React.createContext({});\n\nexport default AppContext;\n","import React from 'react';\n\nconst AppContextLapiz = React.createContext({});\n\nexport default AppContextLapiz;\n","import React from 'react';\n\nconst AppContextBorrador = React.createContext({});\n\nexport default AppContextBorrador;\n","import React from 'react';\n\nconst AppContextCuadrado = React.createContext({});\n\nexport default AppContextCuadrado;\n","import React from 'react';\n\nconst AppContextMover = React.createContext({});\n\nexport default AppContextMover;\n","import React from 'react';\n\nconst AppContextCanvas = React.createContext({});\n\nexport default AppContextCanvas;\n","import React from 'react';\n\nconst AppContextLinea = React.createContext({});\n\nexport default AppContextLinea;\n","import React from 'react';\n\nconst AppContextPlano = React.createContext({});\n\nexport default AppContextPlano;\n","import { useState } from 'react';\n\nconst initialState = {\n\talfabetoMay: [\n\t\t'QWERTYUIOP'.split(''),\n\t\t'ASDFGHJKLÑ'.split(''),\n\t\t'ZXCVBNM,'.split(''),\n\t],\n\talfabetoMin: [\n\t\t'qwertyuiop'.split(''),\n\t\t'asdfghjklñ'.split(''),\n\t\t'zxcvbnm.'.split(''),\n\t],\n\talfabeto: [\n\t\t'QWERTYUIOP'.split(''),\n\t\t'ASDFGHJKLÑ'.split(''),\n\t\t'ZXCVBNM,'.split(''),\n\t],\n\tactive: '',\n\tcolor: 'black',\n\tcolorFondo: 'green',\n\tgrosor: 1,\n};\nconst useInitialState = () => {\n\tconst [state, setState] = useState(initialState);\n\n\tconst toLowerCase = () => {\n\t\tconst auxArray = state.alfabetoMin;\n\t\tsetState({\n\t\t\t...state,\n\t\t\talfabeto: auxArray,\n\t\t});\n\t};\n\tconst toUpperCase = () => {\n\t\tconst auxArray = state.alfabetoMay;\n\t\tsetState({\n\t\t\t...state,\n\t\t\talfabeto: auxArray,\n\t\t});\n\t};\n\n\t// ACTIVA Y DESACTIVA LA OPCION SELECCIONADA DE LA PALETA DE LA PIZARRA\n\tconst updateCanvasPaleta = (optionIcon) => {\n\t\tswitch (optionIcon) {\n\t\t\tcase 'moverIcon':\n\t\t\t\tsetState({\n\t\t\t\t\t...state,\n\t\t\t\t\tactive: 'moverIcon',\n\t\t\t\t});\n\t\t\t\tbreak;\n\t\t\tcase 'lapizIcon':\n\t\t\t\tsetState({\n\t\t\t\t\t...state,\n\t\t\t\t\tactive: 'lapizIcon',\n\t\t\t\t});\n\t\t\t\tbreak;\n\t\t\tcase 'borradorIcon':\n\t\t\t\tsetState({\n\t\t\t\t\t...state,\n\t\t\t\t\tactive: 'borradorIcon',\n\t\t\t\t});\n\t\t\t\tbreak;\n\t\t\tcase 'lineaIcon':\n\t\t\t\tsetState({\n\t\t\t\t\t...state,\n\t\t\t\t\tactive: 'lineaIcon',\n\t\t\t\t});\n\t\t\t\tbreak;\n\t\t\tcase 'cuadradoIcon':\n\t\t\t\tsetState({\n\t\t\t\t\t...state,\n\t\t\t\t\tactive: 'cuadradoIcon',\n\t\t\t\t});\n\t\t\t\tbreak;\n\t\t\tcase 'planoIcon':\n\t\t\t\tsetState({\n\t\t\t\t\t...state,\n\t\t\t\t\tactive: 'planoIcon',\n\t\t\t\t});\n\t\t\t\tbreak;\n\t\t\tcase 'cuadriculaIcon':\n\t\t\t\tsetState({\n\t\t\t\t\t...state,\n\t\t\t\t\tactive: 'cuadriculaIcon',\n\t\t\t\t});\n\t\t\t\tbreak;\n\t\t\tdefault:\n\t\t\t\tconsole.log('Opcion no registrada / useInitialState!!!');\n\t\t\t\tbreak;\n\t\t}\n\t};\n\tconst updateColor = (valor) => {\n\t\tsetState({\n\t\t\t...state,\n\t\t\tcolor: valor,\n\t\t});\n\t};\n\tconst updateGrosor = (valor) => {\n\t\tsetState({\n\t\t\t...state,\n\t\t\tgrosor: valor,\n\t\t});\n\t};\n\tconst updateColorFondo = (valor) => {\n\t\tsetState({\n\t\t\t...state,\n\t\t\tcolorFondo: valor,\n\t\t});\n\t};\n\n\treturn {\n\t\tstate,\n\t\ttoLowerCase,\n\t\ttoUpperCase,\n\t\tupdateCanvasPaleta,\n\t\tupdateColor,\n\t\tupdateColorFondo,\n\t\tupdateGrosor,\n\t};\n};\n\nexport default useInitialState;\n","import { useState } from 'react';\nconst initialStateMover = {\n\tactive: false,\n};\n\nconst useMover = () => {\n\tconst [stateMover, setStateMover] = useState(initialStateMover);\n\n\tconst updateMoverActive = (valor) => {\n\t\tsetStateMover({\n\t\t\t...stateMover,\n\t\t\tactive: valor,\n\t\t});\n\t};\n\treturn {\n\t\tstateMover,\n\t\tupdateMoverActive,\n\t};\n};\n\nexport default useMover;\n","import { useState } from 'react';\nconst initialStateLapiz = {\n\tactive: false,\n\tcolor: 'black',\n\tgrosor: 4,\n\thistoriaLapiz: [],\n};\n\nconst useLapiz = () => {\n\tconst [stateLapiz, setStateLapiz] = useState(initialStateLapiz);\n\n\tconst updateLapizActive = (valor) => {\n\t\tsetStateLapiz({\n\t\t\t...stateLapiz,\n\t\t\tactive: valor,\n\t\t});\n\t};\n\tconst updateLapizColor = (valor) => {\n\t\tconsole.log('color util:', valor);\n\t\tsetStateLapiz({\n\t\t\t...stateLapiz,\n\t\t\tcolor: valor,\n\t\t});\n\t\tconsole.log('color:', stateLapiz);\n\t};\n\tconst updateLapizGrosor = (valor) => {\n\t\tsetStateLapiz({\n\t\t\t...stateLapiz,\n\t\t\tgrosor: valor,\n\t\t});\n\t};\n\tconst add_historiaLapiz = (valor) => {\n\t\tsetStateLapiz({\n\t\t\t...stateLapiz,\n\t\t\thistoriaLapiz: [...stateLapiz.historiaLapiz, valor],\n\t\t});\n\t};\n\tconst updateLapizColorGrosor = (valor1, valor2) => {\n\t\tsetStateLapiz({\n\t\t\t...stateLapiz,\n\t\t\tcolor: valor1,\n\t\t\tgrosor: valor2,\n\t\t});\n\t};\n\n\treturn {\n\t\tstateLapiz,\n\t\tupdateLapizActive,\n\t\tupdateLapizColor,\n\t\tupdateLapizGrosor,\n\t\tadd_historiaLapiz,\n\t\tupdateLapizColorGrosor,\n\t};\n};\n\nexport default useLapiz;\n","import { useState } from 'react';\nconst initialStateBorrador = {\n\tactive: false,\n\tcolor: 'white',\n\tgrosor: 10,\n\thistorialBorrador: [],\n};\n\nconst useBorrador = () => {\n\tconst [stateBorrador, setStateBorrador] = useState(initialStateBorrador);\n\n\tconst updateBorradorActive = (valor) => {\n\t\tsetStateBorrador({\n\t\t\t...stateBorrador,\n\t\t\tactive: valor,\n\t\t});\n\t};\n\tconst updateBorradorColor = (valor) => {\n\t\tsetStateBorrador({\n\t\t\t...stateBorrador,\n\t\t\tcolor: valor,\n\t\t});\n\t};\n\tconst updateBorradorGrosor = (valor) => {\n\t\tsetStateBorrador({\n\t\t\t...stateBorrador,\n\t\t\tgrosor: valor,\n\t\t});\n\t};\n\n\treturn {\n\t\tstateBorrador,\n\t\tupdateBorradorActive,\n\t\tupdateBorradorColor,\n\t\tupdateBorradorGrosor,\n\t};\n};\n\nexport default useBorrador;\n","import { useState } from 'react';\nconst initialStateCuadrado = {\n\tactive: false,\n\tbordeEstado: true, // si tendra borde\n\tbordeGrosor: 5,\n\tbordeColor: 'yellow',\n\tfondoEstado: true, // si tendra fondo\n\tfondoColor: 'black',\n\tx_ini: 0,\n\ty_ini: 0,\n\twidth: 10,\n\theight: 10,\n\thistoriaCuadrado: [],\n};\n\nconst useCuadrado = () => {\n\tconst [stateCuadrado, setStateCuadrado] = useState(initialStateCuadrado);\n\n\tconst updateCuadradoActive = (valor) => {\n\t\tsetStateCuadrado({\n\t\t\t...stateCuadrado,\n\t\t\tactive: valor,\n\t\t});\n\t};\n\t// UPDATE GENERAL(HEADER - PALETA):\n\tconst updateCuadradoBordeGrosor = (valor) => {\n\t\tsetStateCuadrado({\n\t\t\t...stateCuadrado,\n\t\t\tbordeGrosor: valor,\n\t\t});\n\t};\n\tconst updateCuadradoBordeEstado = (valor) => {\n\t\tsetStateCuadrado({\n\t\t\t...stateCuadrado,\n\t\t\tbordeEstado: valor,\n\t\t});\n\t};\n\tconst updateCuadradoBorde_ColorEstado = (color, estado) => {\n\t\tsetStateCuadrado({\n\t\t\t...stateCuadrado,\n\t\t\tbordeColor: color,\n\t\t\tbordeEstado: estado,\n\t\t});\n\t};\n\tconst updateCuadradoFondoEstado = (valor) => {\n\t\tsetStateCuadrado({\n\t\t\t...stateCuadrado,\n\t\t\tfondoEstado: valor,\n\t\t});\n\t};\n\tconst updateCuadradoFondo_ColorEstado = (color, estado) => {\n\t\tsetStateCuadrado({\n\t\t\t...stateCuadrado,\n\t\t\tfondoColor: color,\n\t\t\tfondoEstado: estado,\n\t\t});\n\t};\n\t// CREATE: ADD_IN:\thistoriaCuadrado[]\n\tconst add_cuadrado_en_historia = (cuadrado) => {\n\t\tsetStateCuadrado({\n\t\t\t...stateCuadrado,\n\t\t\thistoriaCuadrado: [...stateCuadrado.historiaCuadrado, cuadrado],\n\t\t});\n\t};\n\t// DELETE: DELETE_IN:\thistoriaCuadrado[]\n\t// UPDATE: UPDATE_IN:\thistoriaCuadrado[]\n\tconst update_cuadrado_en_historia = (array) => {\n\t\tsetStateCuadrado({\n\t\t\t...stateCuadrado,\n\t\t\thistoriaCuadrado: array,\n\t\t});\n\t};\n\tconst update_all = (\n\t\tcolorBorde,\n\t\tcolorFondo,\n\t\tbordeGrosor,\n\t\tbordeEstadoIn,\n\t\tfondoEstadoIn\n\t) => {\n\t\tsetStateCuadrado({\n\t\t\t...stateCuadrado,\n\t\t\tbordeColor: colorBorde,\n\t\t\tfondoColor: colorFondo,\n\t\t\tbordeGrosor: bordeGrosor,\n\t\t\tbordeEstado: bordeEstadoIn,\n\t\t\tfondoEstado: fondoEstadoIn,\n\t\t});\n\t};\n\n\treturn {\n\t\tstateCuadrado,\n\t\tupdateCuadradoActive,\n\t\tupdateCuadradoBordeGrosor,\n\t\tupdateCuadradoBordeEstado,\n\t\tupdateCuadradoBorde_ColorEstado,\n\t\tupdateCuadradoFondoEstado,\n\t\tupdateCuadradoFondo_ColorEstado,\n\t\tadd_cuadrado_en_historia,\n\t\tupdate_cuadrado_en_historia,\n\t\tupdate_all,\n\t};\n};\n\nexport default useCuadrado;\n","import { useState } from 'react';\n\nconst initialStateCanvas = {\n\tactive: false,\n\tid: 0,\n\twidth: 0,\n\theight: 0,\n\tcuadriculaWidth: 30,\n\tfondoColor: 'white',\n\tlineaColor: '#d5dbdb',\n\tlineaGrosor: 1,\n\ttipoCuadricula: 'cuadricula', // cuadricula, linea, ninguno\n};\n\nconst useCanvas = () => {\n\tconst [stateCanvas, setStateCanvas] = useState(initialStateCanvas);\n\n\tconst updateCuadriculaActive = (valor) => {\n\t\tsetStateCanvas({\n\t\t\t...stateCanvas,\n\t\t\tactive: valor,\n\t\t});\n\t};\n\tconst updateCuadriculaWidth = (valor) => {\n\t\tsetStateCanvas({\n\t\t\t...stateCanvas,\n\t\t\tcuadriculaWidth: valor,\n\t\t});\n\t};\n\tconst update_width_height = (width, height) => {\n\t\tsetStateCanvas({\n\t\t\t...stateCanvas,\n\t\t\twidth: width,\n\t\t\theight: height,\n\t\t});\n\t};\n\tconst updateTipoCuadricula = (valor) => {\n\t\tsetStateCanvas({\n\t\t\t...stateCanvas,\n\t\t\ttipoCuadricula: valor,\n\t\t});\n\t};\n\n\treturn {\n\t\tstateCanvas,\n\t\tupdateCuadriculaActive,\n\t\tupdateCuadriculaWidth,\n\t\tupdate_width_height,\n\t\tupdateTipoCuadricula,\n\t};\n};\n\nexport default useCanvas;\n","import { useState } from 'react';\nconst initialStateLinea = {\n\tactive: false,\n\tcolor: 'black',\n\tgrosor: 2,\n\tid: 0,\n\thistoriaLinea: [],\n};\n\nconst useLinea = () => {\n\tconst [stateLinea, setStateLinea] = useState(initialStateLinea);\n\n\tconst updateLineaActive = (valor) => {\n\t\tsetStateLinea({\n\t\t\t...stateLinea,\n\t\t\tactive: valor,\n\t\t});\n\t};\n\tconst updateLineaColor = (valor) => {\n\t\tconsole.log('color util:', valor);\n\t\tsetStateLinea({\n\t\t\t...stateLinea,\n\t\t\tcolor: valor,\n\t\t});\n\t\tconsole.log('color:', stateLinea);\n\t};\n\tconst updateLineaGrosor = (valor) => {\n\t\tsetStateLinea({\n\t\t\t...stateLinea,\n\t\t\tgrosor: valor,\n\t\t});\n\t};\n\tconst add_historiaLinea = (valor) => {\n\t\tsetStateLinea({\n\t\t\t...stateLinea,\n\t\t\thistoriaLinea: [...stateLinea.historiaLinea, valor],\n\t\t});\n\t};\n\tconst add_historiaLinea_id = (valor, id) => {\n\t\tsetStateLinea({\n\t\t\t...stateLinea,\n\t\t\tid: id,\n\t\t\thistoriaLinea: [...stateLinea.historiaLinea, valor],\n\t\t});\n\t};\n\tconst updateLineaColorGrosor = (valor1, valor2) => {\n\t\tsetStateLinea({\n\t\t\t...stateLinea,\n\t\t\tcolor: valor1,\n\t\t\tgrosor: valor2,\n\t\t});\n\t};\n\n\treturn {\n\t\tstateLinea,\n\t\tupdateLineaActive,\n\t\tupdateLineaColor,\n\t\tupdateLineaGrosor,\n\t\tadd_historiaLinea,\n\t\tadd_historiaLinea_id,\n\t\tupdateLineaColorGrosor,\n\t};\n};\n\nexport default useLinea;\n","import { useState } from 'react';\nconst initialStatePlano = {\n\tactive: false,\n\tx_min: -10,\n\ty_max: 10,\n\tsalto: 1,\n\tcolor_cuadricula: '#abb2b9',\n\twidth_cuadricula: 20,\n\thistoriaPlano: [],\n};\n\nconst usePlano = () => {\n\tconst [statePlano, setStatePlano] = useState(initialStatePlano);\n\n\tconst updatePlanoActive = (valor) => {\n\t\tsetStatePlano({\n\t\t\t...statePlano,\n\t\t\tactive: valor,\n\t\t});\n\t};\n\tconst add_plano_en_historia = (valor) => {\n\t\tsetStatePlano({\n\t\t\t...statePlano,\n\t\t\thistoriaPlano: [...statePlano.historiaPlano, valor],\n\t\t});\n\t};\n\treturn {\n\t\tstatePlano,\n\t\tupdatePlanoActive,\n\t\tadd_plano_en_historia,\n\t};\n};\n\nexport default usePlano;\n","import React from 'react';\n\nconst MenuLapizAux = () => {\n\treturn (\n\t\t<div>\n\t\t\t<h1>BIENVENIDO A LA PIZARRA DIGITAL WEB</h1>\n\t\t</div>\n\t);\n};\n\nexport default MenuLapizAux;\n","import React, { useContext, useEffect } from 'react';\n\nimport '../styles/MenuPlano.scss';\n\n// CONTEXT:\nimport AppContextPlano from '../context/AppContextPlano';\n\nconst MenuPlano = () => {\n\t// useContext:\n\tconst { statePlano } = useContext(AppContextPlano);\n\n\t// LOGICA\n\t// LOGICA END.\n\n\t// useEffect\n\tuseEffect(() => {}, []);\n\treturn (\n\t\t<article className=\"article__menuPlano\">\n\t\t\t<div className=\"article__menuPlano__limites\">\n\t\t\t\t<div className=\"article__menuPlano__limites__minMay\">\n\t\t\t\t\t<span>X_MIN: </span>\n\t\t\t\t\t<span>\n\t\t\t\t\t\t<input\n\t\t\t\t\t\t\tclassName=\"text\"\n\t\t\t\t\t\t\ttype=\"text\"\n\t\t\t\t\t\t\tdefaultValue={statePlano.x_min}\n\t\t\t\t\t\t/>\n\t\t\t\t\t</span>\n\t\t\t\t\t<span>\n\t\t\t\t\t\t<input type=\"button\" value=\"-\" />\n\t\t\t\t\t</span>\n\t\t\t\t\t<span>\n\t\t\t\t\t\t<input type=\"button\" value=\"+\" />\n\t\t\t\t\t</span>\n\t\t\t\t</div>\n\t\t\t\t<div className=\"article__menuPlano__limites__minMay\">\n\t\t\t\t\t<span>Y_MIN:</span>\n\t\t\t\t\t<span>\n\t\t\t\t\t\t<input\n\t\t\t\t\t\t\tclassName=\"text\"\n\t\t\t\t\t\t\ttype=\"text\"\n\t\t\t\t\t\t\tdefaultValue={statePlano.y_max}\n\t\t\t\t\t\t/>\n\t\t\t\t\t</span>\n\t\t\t\t\t<span>\n\t\t\t\t\t\t<input type=\"button\" value=\"-\" />\n\t\t\t\t\t</span>\n\t\t\t\t\t<span>\n\t\t\t\t\t\t<input type=\"button\" value=\"+\" />\n\t\t\t\t\t</span>\n\t\t\t\t</div>\n\t\t\t</div>\n\t\t\t<div className=\"article__menuPlano__salto\">\n\t\t\t\t<div className=\"article__menuPlano__salto__minMay\">\n\t\t\t\t\t<span>SALTO:</span>\n\t\t\t\t\t<span>\n\t\t\t\t\t\t<input className=\"text\" type=\"text\" defaultValue=\"1\" />\n\t\t\t\t\t</span>\n\t\t\t\t\t<span>\n\t\t\t\t\t\t<input type=\"button\" value=\"-\" />\n\t\t\t\t\t</span>\n\t\t\t\t\t<span>\n\t\t\t\t\t\t<input type=\"button\" value=\"+\" />\n\t\t\t\t\t</span>\n\t\t\t\t</div>\n\t\t\t</div>\n\t\t</article>\n\t);\n};\n\nexport default MenuPlano;\n","import React from 'react';\n\nconst MenuMover = () => {\n\treturn <div>mover</div>;\n};\n\nexport default MenuMover;\n","import React, { useEffect, useContext } from 'react';\n\n// context\nimport AppContext from '../context/AppContext';\n\n// styles:\nimport '../styles/PaletaColor.scss';\nimport iconLineaNone from '../assets/icons/lineaNone.svg';\n\nconst PaletaColor = (value) => {\n\t// useContext:\n\tconst { state, updateColor, updateColorFondo } = useContext(AppContext);\n\n\t// LOGICA:\n\tconst arrayPaletaColor = [\n\t\t{ colorLine: 'white', id: `colorNone-${value.tipo}` },\n\t\t{ colorLine: 'black', id: `colorBlack-${value.tipo}` },\n\t\t{ colorLine: 'red', id: `colorRed-${value.tipo}` },\n\t\t{ colorLine: 'green', id: `colorGreen-${value.tipo}` },\n\t\t{ colorLine: 'blue', id: `colorBlue-${value.tipo}` },\n\t\t{ colorLine: 'yellow', id: `colorYellow-${value.tipo}` },\n\t];\n\tconst updatePaletaColor = (color) => {\n\t\tarrayPaletaColor.forEach((dato) =>\n\t\t\tdocument.getElementById(dato.id).classList.remove('activePaletaColor')\n\t\t);\n\t\tlet elem = arrayPaletaColor.find((elem) => elem.colorLine == color);\n\t\tdocument.getElementById(elem.id).classList.add('activePaletaColor');\n\t};\n\tconst handlePaletaColor = (color) => {\n\t\tupdatePaletaColor(color);\n\t\tvalue.tipo == 'linea'\n\t\t\t? updateColor(color) // CONTEXT COLOR\n\t\t\t: updateColorFondo(color); // CONTEXT colorFondo\n\t};\n\t// LOGICA END.\n\n\t// useEffect:\n\tuseEffect(() => {\n\t\t// se ejecuta solo la 1ra vez que se carga el componente.\n\t\tvalue.tipo == 'linea'\n\t\t\t? updatePaletaColor(state.color)\n\t\t\t: updatePaletaColor(state.colorFondo);\n\t}, [updateColor, updateColorFondo]);\n\n\treturn (\n\t\t<div className=\"article__menuLapiz__paletaColor\">\n\t\t\t<div>\n\t\t\t\t<span>{value.title}: </span>\n\t\t\t</div>\n\t\t\t<div className=\"article__menuLapiz__paletaColor__container\">\n\t\t\t\t{arrayPaletaColor.map((elem) => (\n\t\t\t\t\t<div\n\t\t\t\t\t\tclassName={`color activePaletaColor ${elem.colorLine}`}\n\t\t\t\t\t\tid={elem.id}\n\t\t\t\t\t\tonClick={() => handleColor('colorNegro')}\n\t\t\t\t\t\tkey={elem.id}\n\t\t\t\t\t\tonClick={() => handlePaletaColor(elem.colorLine)}\n\t\t\t\t\t>\n\t\t\t\t\t\t{elem.colorLine == 'white' && <img src={iconLineaNone} />}\n\t\t\t\t\t</div>\n\t\t\t\t))}\n\t\t\t</div>\n\t\t</div>\n\t);\n};\n\nexport default PaletaColor;\n","import React, { useEffect, useContext } from 'react';\n\n// context\nimport AppContext from '../context/AppContext';\n\n// styles:\nimport '../styles/PaletaGrosor.scss';\n//import iconLineaNone from '../assets/icons/lineaNone.svg';\nimport iconLineaS from '../assets/icons/lineaS.svg';\nimport iconLineaM from '../assets/icons/lineaM.svg';\nimport iconLineaL from '../assets/icons/lineaL.svg';\nimport iconLineaXL from '../assets/icons/lineaXL.svg';\nimport iconLineaXXL from '../assets/icons/lineaXXL.svg';\n\nconst PaletaGrosor = (title) => {\n\t// useContext:\n\tconst { state, updateGrosor } = useContext(AppContext);\n\n\t// LOGICA:\n\tconst arrayIconLinea = [\n\t\t//{ iconLine: iconLineaNone, grosor: 0, id: 'iconLineaNone' },\n\t\t{ iconLine: iconLineaS, grosor: 1, id: 'iconLineaS' },\n\t\t{ iconLine: iconLineaM, grosor: 2, id: 'iconLineaM' },\n\t\t{ iconLine: iconLineaL, grosor: 4, id: 'iconLineaL' },\n\t\t{ iconLine: iconLineaXL, grosor: 6, id: 'iconLineaXL' },\n\t\t{ iconLine: iconLineaXXL, grosor: 10, id: 'iconLineaXXL' },\n\t];\n\tconst updatePaletaGrosor = (grosor) => {\n\t\tconst array = document.querySelectorAll('.activeIconLinea');\n\t\tfor (let i = 0; i < array.length; i++) {\n\t\t\tarray[i].classList.remove('activeIconLinea');\n\t\t}\n\t\tlet elem = arrayIconLinea.find((elem) => elem.grosor == grosor);\n\t\tdocument.getElementById(elem.id).classList.add('activeIconLinea');\n\t};\n\tconst handleLineaGrosor = (grosor) => {\n\t\tupdatePaletaGrosor(grosor);\n\t\tupdateGrosor(grosor); // CONTEXT\n\t};\n\t// LOGICA END.\n\n\t// useEffect:\n\tuseEffect(() => {\n\t\t// se ejecuta solo la 1ra vez que se carga el componente.\n\t\tupdatePaletaGrosor(state.grosor);\n\t}, []);\n\n\treturn (\n\t\t<div className=\"article__menuLapiz__tamano\">\n\t\t\t<span htmlFor=\"\">{title.title}: </span>\n\t\t\t<div className=\"article__menuLapiz__tamano__icons\">\n\t\t\t\t{arrayIconLinea.map((elem) => (\n\t\t\t\t\t<img\n\t\t\t\t\t\tclassName=\"article__menuLapiz__tamano__icons__icon \"\n\t\t\t\t\t\tsrc={elem.iconLine}\n\t\t\t\t\t\tid={elem.id}\n\t\t\t\t\t\tkey={`key-${elem.id}`}\n\t\t\t\t\t\tonClick={() => handleLineaGrosor(elem.grosor)}\n\t\t\t\t\t/>\n\t\t\t\t))}\n\t\t\t</div>\n\t\t</div>\n\t);\n};\n\nexport default PaletaGrosor;\n","import React, { useContext, useEffect } from 'react';\n\n// context\nimport AppContext from '../context/AppContext';\nimport AppContextLapiz from '../context/AppContextLapiz';\n\n// components:\nimport PaletaColor from '../components/PaletaColor';\nimport PaletaGrosor from '../components/PaletaGrosor';\n\n// styles:\nimport '../styles/MenuLapiz.scss';\n\nconst MenuLapiz = () => {\n\t// useContext:\n\tconst { state } = useContext(AppContext);\n\tconst { updateLapizColorGrosor } = useContext(AppContextLapiz);\n\n\t// LOGICA:\n\n\t// LOGICA END.\n\n\t// useEffect:\n\tuseEffect(() => {\n\t\tupdateLapizColorGrosor(state.color, state.grosor);\n\t}, [state]);\n\tuseEffect(() => {\n\t\t//console.log('STATE LAPIZ:', stateLapiz);\n\t}, []);\n\n\treturn (\n\t\t<article className=\"article__menuLapiz\">\n\t\t\t{<PaletaGrosor title=\"LINEA\" />}\n\t\t\t{<PaletaColor tipo=\"linea\" title=\"Color\" />}\n\t\t</article>\n\t);\n};\n\nexport default MenuLapiz;\n","import React, { useContext, useEffect } from 'react';\n\n// context:\nimport AppContextBorrador from '../context/AppContextBorrador';\n\n// style:\nimport '../styles/MenuBorrador.scss';\n\nconst MenuBorrador = () => {\n\t// useContext:\n\tconst { stateBorrador, updateBorradorGrosor } =\n\t\tuseContext(AppContextBorrador);\n\n\t// LOGICA:\n\tconst updatePaletaGrosor = (grosor) => {\n\t\tdocument.getElementById('grosorBorrador').value = grosor;\n\t};\n\tconst handleGrosor = (opMatematica) => {\n\t\tlet valor = parseInt(document.getElementById('grosorBorrador').value);\n\t\tlet update = true;\n\t\tswitch (opMatematica) {\n\t\t\tcase '+':\n\t\t\t\tvalor + 1 < 20 ? (valor = valor + 1) : (update = false);\n\t\t\t\tbreak;\n\t\t\tcase '-':\n\t\t\t\tvalor - 1 > 0 ? (valor = valor - 1) : (update = false);\n\t\t\t\tbreak;\n\t\t\tdefault:\n\t\t\t\tbreak;\n\t\t}\n\t\tif (update) {\n\t\t\tdocument.getElementById('grosorBorrador').value = valor;\n\t\t\tupdateBorradorGrosor(valor); // CONTEXT\n\t\t} else {\n\t\t\tconsole.log('limite');\n\t\t}\n\t};\n\t// LOGICA END.\n\n\t// EFFECT:\n\tuseEffect(() => {\n\t\tupdatePaletaGrosor(stateBorrador.grosor);\n\t}, [stateBorrador, updateBorradorGrosor]);\n\n\treturn (\n\t\t<article className=\"article__menuBorrador\">\n\t\t\t<div className=\"article__menuBorrador__tamano\">\n\t\t\t\t<span htmlFor=\"\">TAMAÑO DEL BORRADOR: </span>\n\t\t\t\t<input\n\t\t\t\t\ttype=\"text\"\n\t\t\t\t\tclassName=\"input\"\n\t\t\t\t\tid=\"grosorBorrador\"\n\t\t\t\t\tplaceholder=\"2\"\n\t\t\t\t\tdefaultValue=\"4\"\n\t\t\t\t\tdisabled\n\t\t\t\t/>\n\t\t\t\t<input\n\t\t\t\t\tclassName=\"button\"\n\t\t\t\t\tid=\"button1_txt\"\n\t\t\t\t\ttype=\"button\"\n\t\t\t\t\tvalue=\"+\"\n\t\t\t\t\tonClick={() => handleGrosor('+')}\n\t\t\t\t/>\n\t\t\t\t<input\n\t\t\t\t\tclassName=\"button\"\n\t\t\t\t\tid=\"button2_txt\"\n\t\t\t\t\ttype=\"button\"\n\t\t\t\t\tvalue=\"-\"\n\t\t\t\t\tonClick={() => handleGrosor('-')}\n\t\t\t\t/>\n\t\t\t</div>\n\t\t</article>\n\t);\n};\n\nexport default MenuBorrador;\n","import React, { useEffect, useContext } from 'react';\n\n// context\nimport AppContext from '../context/AppContext';\nimport AppContextCuadrado from '../context/AppContextCuadrado';\n\n// styles:\nimport '../styles/MenuCuadrado.scss';\n\n// components:\nimport PaletaGrosor from '../components/PaletaGrosor';\nimport PaletaColorBorde from '../components/PaletaColor';\nimport PaletaColorFondo from '../components/PaletaColor';\n\nconst MenuCuadrado = () => {\n\t// useContext:\n\tconst { state } = useContext(AppContext);\n\tconst {\n\t\tstateCuadrado,\n\t\tupdateCuadradoBordeGrosor,\n\t\tupdateCuadradoBorde_ColorEstado,\n\t\tupdateCuadradoFondo_ColorEstado,\n\t\tupdate_all,\n\t} = useContext(AppContextCuadrado);\n\n\t// LOGICA:\n\t// LOGICA END\n\n\t// useEffect:\n\tuseEffect(() => {\n\t\t// solo 1 vez al cargar el componente:\n\t}, []);\n\tuseEffect(() => {\n\t\t// solo cuando se modifica [stateCuadrado]:\n\t}, [stateCuadrado]);\n\n\tuseEffect(() => {\n\t\t// se ejecuta cada vez que se modifica el state.color\n\t\tupdateCuadradoBorde_ColorEstado(state.color, state.color != 'white');\n\t}, [state.color]);\n\n\tuseEffect(() => {\n\t\t// se ejecuta cada vez que se modifica el state\n\t\tupdateCuadradoFondo_ColorEstado(\n\t\t\tstate.colorFondo,\n\t\t\tstate.colorFondo != 'white'\n\t\t);\n\t}, [state.colorFondo]);\n\n\tuseEffect(() => {\n\t\tupdateCuadradoBordeGrosor(state.grosor);\n\t}, [state.grosor]);\n\n\tuseEffect(() => {\n\t\tupdate_all(\n\t\t\tstate.color,\n\t\t\tstate.colorFondo,\n\t\t\tstate.grosor,\n\t\t\tstate.color != 'white',\n\t\t\tstate.colorFondo != 'white'\n\t\t);\n\t}, []);\n\treturn (\n\t\t<article className=\"article__menuCuadrado\">\n\t\t\t{<PaletaGrosor title=\"BORDE\" />}\n\t\t\t{<PaletaColorBorde tipo=\"linea\" title=\"Borde\" />}\n\t\t\t{<PaletaColorFondo tipo=\"fondo\" title=\"Fondo\" />}\n\t\t</article>\n\t);\n};\n\nexport default MenuCuadrado;\n","import React, { useEffect, useContext } from 'react';\n\n// context\nimport AppContextCanvas from '../context/AppContextCanvas';\n\n// styles:\nimport '../styles/MenuCuadricula.scss';\nimport iconCuadricula from '../assets/icons/cuadricula.svg';\nimport iconCuadriculaSin from '../assets/icons/cuadriculaSin.svg';\nimport iconCuadriculaNone from '../assets/icons/lineaNone.svg';\n\nconst MenuCuadricula = () => {\n\t// useContext:\n\tconst { stateCanvas, updateTipoCuadricula, updateCuadriculaWidth } =\n\t\tuseContext(AppContextCanvas);\n\n\t// LOGICA:\n\tconst arrayIconCuadricula = [\n\t\t{\n\t\t\ticonCuadricula: iconCuadricula,\n\t\t\ttipo: 'cuadricula',\n\t\t\tid: 'iconCuadricula',\n\t\t},\n\t\t{\n\t\t\ticonCuadricula: iconCuadriculaSin,\n\t\t\ttipo: 'linea',\n\t\t\tid: 'iconCuadriculaSin',\n\t\t},\n\t\t{\n\t\t\ticonCuadricula: iconCuadriculaNone,\n\t\t\ttipo: 'ninguno',\n\t\t\tid: 'iconCuadriculaNone',\n\t\t},\n\t];\n\tconst updatePaleta_tipoCuadricula = (tipo) => {\n\t\tconst array = document.querySelectorAll('.activeIconCuadricula');\n\t\tfor (let i = 0; i < array.length; i++) {\n\t\t\tarray[i].classList.remove('activeIconCuadricula');\n\t\t}\n\t\tlet elem = arrayIconCuadricula.find((elem) => elem.tipo == tipo);\n\t\tdocument.getElementById(elem.id).classList.add('activeIconCuadricula');\n\t};\n\tconst handleCuadriculaTipo = (tipo) => {\n\t\tupdatePaleta_tipoCuadricula(tipo);\n\t\tupdateTipoCuadricula(tipo);\n\t};\n\tconst handleBtnAncho = (op) => {\n\t\top == '-' && stateCanvas.cuadriculaWidth > 10\n\t\t\t? updateCuadriculaWidth(stateCanvas.cuadriculaWidth - 10)\n\t\t\t: '';\n\t\top == '+' ? updateCuadriculaWidth(stateCanvas.cuadriculaWidth + 10) : '';\n\t};\n\t// LOGICA END.\n\n\t// useEffect\n\tuseEffect(() => {\n\t\tupdatePaleta_tipoCuadricula(stateCanvas.tipoCuadricula);\n\t}, []);\n\n\treturn (\n\t\t<article className=\"article__menuCuadricula\">\n\t\t\t<div className=\"article__menuCuadricula__paletaTipo\">\n\t\t\t\t<div>\n\t\t\t\t\t<span>Cuadricula: </span>\n\t\t\t\t</div>\n\t\t\t\t<div className=\"article__menuCuadricula__paletaTipo__icons\">\n\t\t\t\t\t{arrayIconCuadricula.map((elem) => (\n\t\t\t\t\t\t<img\n\t\t\t\t\t\t\tclassName=\"article__menuCuadricula__paletaTipo__icons__icon \"\n\t\t\t\t\t\t\tsrc={elem.iconCuadricula}\n\t\t\t\t\t\t\tid={elem.id}\n\t\t\t\t\t\t\tkey={`key-${elem.id}`}\n\t\t\t\t\t\t\tonClick={() => handleCuadriculaTipo(elem.tipo)}\n\t\t\t\t\t\t/>\n\t\t\t\t\t))}\n\t\t\t\t</div>\n\t\t\t</div>\n\t\t\t<div className=\"article__menuCuadricula__paletaAncho\">\n\t\t\t\t<div>\n\t\t\t\t\t<span>Tamaño: </span>\n\t\t\t\t</div>\n\t\t\t\t<div className=\"inputButton\">\n\t\t\t\t\t<input type=\"button\" value=\"-\" onClick={() => handleBtnAncho('-')} />\n\t\t\t\t</div>\n\t\t\t\t<div className=\"inputButton\">\n\t\t\t\t\t<input type=\"button\" value=\"+\" onClick={() => handleBtnAncho('+')} />\n\t\t\t\t</div>\n\t\t\t</div>\n\t\t</article>\n\t);\n};\n\nexport default MenuCuadricula;\n","import React, { useContext, useEffect } from 'react';\n\n// context\nimport AppContext from '../context/AppContext';\nimport AppContextLinea from '../context/AppContextLinea';\n\n// components:\nimport PaletaColor from '../components/PaletaColor';\nimport PaletaGrosor from '../components/PaletaGrosor';\n\n// styles:\nimport '../styles/MenuLinea.scss';\n\nconst MenuLinea = () => {\n\t// useContext:\n\tconst { state } = useContext(AppContext);\n\tconst { updateLineaColorGrosor } = useContext(AppContextLinea);\n\n\t// LOGICA:\n\n\t// LOGICA END.\n\n\t// useEffect:\n\tuseEffect(() => {\n\t\tupdateLineaColorGrosor(state.color, state.grosor);\n\t}, [state]);\n\tuseEffect(() => {\n\t\t//console.log('STATE Linea:', stateLinea);\n\t}, []);\n\n\treturn (\n\t\t<article className=\"article__menuLinea\">\n\t\t\t{<PaletaGrosor title=\"LINEA\" />}\n\t\t\t{<PaletaColor tipo=\"linea\" title=\"Color\" />}\n\t\t</article>\n\t);\n};\n\nexport default MenuLinea;\n","import React, { useEffect, useContext, useState } from 'react';\n\n// estilos:\nimport '../styles/Header.scss';\n\n// containers:\nimport Menu1 from '../containers/Menu1';\nimport MenuPlano from '../containers/MenuPlano';\nimport MenuMover from '../containers/MenuMover';\nimport MenuLapiz from '../containers/MenuLapiz';\nimport MenuBorrador from '../containers/MenuBorrador';\nimport MenuCuadrado from '../containers/MenuCuadrado';\nimport MenuCuadricula from '../containers/MenuCuadricula';\nimport MenuLinea from '../containers/MenuLinea';\n\n// context:\nimport AppContext from '../context/AppContext';\n\n// iconos:\n\nconst Header = () => {\n\t// useContext:\n\tconst { state } = useContext(AppContext);\n\n\t// useState:\n\tconst [toggleMenu1, setToggleMenu1] = useState(false);\n\t//const [toggleMenu2, setToggleMenu2] = useState(false);\n\tconst [toggleMenuMover, setToggleMenuMover] = useState(false);\n\tconst [toggleMenuLapiz, setToggleMenuLapiz] = useState(false);\n\tconst [toggleMenuBorrador, setToggleMenuBorrador] = useState(false);\n\tconst [toggleMenuCuadrado, setToggleMenuCuadrado] = useState(false);\n\tconst [toggleMenuCuadricula, setToggleMenuCuadricula] = useState(false);\n\tconst [toggleMenuLinea, setToggleMenuLinea] = useState(false);\n\tconst [toggleMenuPlano, setToggleMenuPlano] = useState(false);\n\n\t// useEffect:\n\tuseEffect(() => {\n\t\tswitch (state.active) {\n\t\t\tcase 'moverIcon':\n\t\t\t\tsetToggleMenu1(false);\n\t\t\t\tsetToggleMenuMover(true);\n\t\t\t\tsetToggleMenuLapiz(false);\n\t\t\t\tsetToggleMenuBorrador(false);\n\t\t\t\tsetToggleMenuCuadrado(false);\n\t\t\t\tsetToggleMenuCuadricula(false);\n\t\t\t\tsetToggleMenuLinea(false);\n\t\t\t\tsetToggleMenuPlano(false);\n\t\t\t\tbreak;\n\t\t\tcase 'lapizIcon':\n\t\t\t\tsetToggleMenu1(false);\n\t\t\t\tsetToggleMenuMover(false);\n\t\t\t\tsetToggleMenuLapiz(true);\n\t\t\t\tsetToggleMenuBorrador(false);\n\t\t\t\tsetToggleMenuCuadrado(false);\n\t\t\t\tsetToggleMenuCuadricula(false);\n\t\t\t\tsetToggleMenuLinea(false);\n\t\t\t\tsetToggleMenuPlano(false);\n\t\t\t\tbreak;\n\t\t\tcase 'borradorIcon':\n\t\t\t\tsetToggleMenu1(false);\n\t\t\t\tsetToggleMenuMover(false);\n\t\t\t\tsetToggleMenuLapiz(false);\n\t\t\t\tsetToggleMenuBorrador(true);\n\t\t\t\tsetToggleMenuCuadrado(false);\n\t\t\t\tsetToggleMenuCuadricula(false);\n\t\t\t\tsetToggleMenuLinea(false);\n\t\t\t\tsetToggleMenuPlano(false);\n\t\t\t\tbreak;\n\t\t\tcase 'cuadradoIcon':\n\t\t\t\tsetToggleMenu1(false);\n\t\t\t\tsetToggleMenuMover(false);\n\t\t\t\tsetToggleMenuLapiz(false);\n\t\t\t\tsetToggleMenuBorrador(false);\n\t\t\t\tsetToggleMenuCuadrado(true);\n\t\t\t\tsetToggleMenuCuadricula(false);\n\t\t\t\tsetToggleMenuLinea(false);\n\t\t\t\tsetToggleMenuPlano(false);\n\t\t\t\tbreak;\n\t\t\tcase 'lineaIcon':\n\t\t\t\tsetToggleMenu1(false);\n\t\t\t\tsetToggleMenuMover(false);\n\t\t\t\tsetToggleMenuLapiz(false);\n\t\t\t\tsetToggleMenuBorrador(false);\n\t\t\t\tsetToggleMenuCuadrado(false);\n\t\t\t\tsetToggleMenuCuadricula(false);\n\t\t\t\tsetToggleMenuLinea(true);\n\t\t\t\tsetToggleMenuPlano(false);\n\t\t\t\tbreak;\n\t\t\tcase 'planoIcon':\n\t\t\t\tsetToggleMenu1(false);\n\t\t\t\tsetToggleMenuMover(false);\n\t\t\t\tsetToggleMenuLapiz(false);\n\t\t\t\tsetToggleMenuBorrador(false);\n\t\t\t\tsetToggleMenuCuadrado(false);\n\t\t\t\tsetToggleMenuCuadricula(false);\n\t\t\t\tsetToggleMenuLinea(false);\n\t\t\t\tsetToggleMenuPlano(true);\n\t\t\t\tbreak;\n\t\t\tcase 'cuadriculaIcon':\n\t\t\t\tsetToggleMenu1(false);\n\t\t\t\tsetToggleMenuMover(false);\n\t\t\t\tsetToggleMenuLapiz(false);\n\t\t\t\tsetToggleMenuBorrador(false);\n\t\t\t\tsetToggleMenuCuadrado(false);\n\t\t\t\tsetToggleMenuCuadricula(true);\n\t\t\t\tsetToggleMenuLinea(false);\n\t\t\t\tsetToggleMenuPlano(false);\n\t\t\t\tbreak;\n\t\t\tdefault:\n\t\t\t\tsetToggleMenu1(true);\n\t\t\t\tsetToggleMenuMover(false);\n\t\t\t\tsetToggleMenuLapiz(false);\n\t\t\t\tsetToggleMenuBorrador(false);\n\t\t\t\tsetToggleMenuCuadrado(false);\n\t\t\t\tsetToggleMenuCuadricula(false);\n\t\t\t\tsetToggleMenuLinea(false);\n\t\t\t\tsetToggleMenuPlano(false);\n\t\t\t\tbreak;\n\t\t}\n\t}, [state]);\n\treturn (\n\t\t<nav className=\"header__nav\">\n\t\t\t<div className=\"navbar-left\">\n\t\t\t\t<ul>\n\t\t\t\t\t<li>\n\t\t\t\t\t\t<a href=\"/\">MathBoard</a>\n\t\t\t\t\t</li>\n\t\t\t\t</ul>\n\t\t\t</div>\n\t\t\t<div className=\"navbar-central\">\n\t\t\t\t{toggleMenu1 && <Menu1 />}\n\t\t\t\t{toggleMenuPlano && <MenuPlano />}\n\t\t\t\t{toggleMenuMover && <MenuMover />}\n\t\t\t\t{toggleMenuLapiz && <MenuLapiz />}\n\t\t\t\t{toggleMenuBorrador && <MenuBorrador />}\n\t\t\t\t{toggleMenuCuadrado && <MenuCuadrado />}\n\t\t\t\t{toggleMenuCuadricula && <MenuCuadricula />}\n\t\t\t\t{toggleMenuLinea && <MenuLinea />}\n\t\t\t</div>\n\t\t\t<div className=\"navbar-right\">\n\t\t\t\t<ul>\n\t\t\t\t\t<li className=\"navbar-email\">UMSA / INFORMÁTICA</li>\n\t\t\t\t</ul>\n\t\t\t</div>\n\t\t</nav>\n\t);\n};\n\nexport default Header;\n","import React from 'react';\n\nimport '../styles/Key.scss';\n\nconst Key = (valor) => {\n\tconst handleClick = (key) => {\n\t\tconsole.log(key);\n\t};\n\n\treturn (\n\t\t<input\n\t\t\ttype=\"button\"\n\t\t\tvalue={valor.element}\n\t\t\tclassName={`key ${valor.element}`}\n\t\t\tonClick={() => handleClick(valor.element)}\n\t\t/>\n\t);\n};\n\nexport default Key;\n","import React, { useState, useContext } from 'react';\n\nimport AppContext from '../context/AppContext';\n\nimport '../styles/KeySvg.scss';\n\nconst KeySvg = (svg) => {\n\tconst [toggleShift, setToggleShift] = useState(false);\n\n\tconst { toLowerCase, toUpperCase } = useContext(AppContext);\n\n\tconst handleClick = (option) => {\n\t\tswitch (option) {\n\t\t\tcase 'shift-fill':\n\t\t\t\tconsole.log(option);\n\t\t\t\tsetToggleShift(!toggleShift);\n\t\t\t\ttoggleShift ? toUpperCase() : toLowerCase();\n\t\t\t\tbreak;\n\t\t\tcase 'DEL':\n\t\t\t\tconsole.log(option);\n\t\t\t\tbreak;\n\t\t\tcase 'caret-left':\n\t\t\t\tconsole.log(option);\n\t\t\t\tbreak;\n\t\t\tcase 'caret-right':\n\t\t\t\tconsole.log(option);\n\t\t\t\tbreak;\n\t\t\tcase 'backspace':\n\t\t\t\tconsole.log(option);\n\t\t\t\tbreak;\n\t\t\tdefault:\n\t\t\t\tbreak;\n\t\t}\n\t};\n\n\treturn (\n\t\t<input\n\t\t\ttype=\"button\"\n\t\t\tvalue=\"\"\n\t\t\tclassName={`keySvg ${svg.element}`}\n\t\t\tid={svg.element}\n\t\t\tonClick={() => handleClick(svg.element)}\n\t\t/>\n\t);\n};\n\nexport default KeySvg;\n","import React from 'react';\n\nimport '../styles/KeySvg.scss';\n\nconst KeyTxt = (txt) => {\n\tconst handleClick = (option) => {\n\t\tconsole.log(option);\n\t};\n\n\treturn (\n\t\t<input\n\t\t\ttype=\"button\"\n\t\t\tvalue={txt.element}\n\t\t\tclassName={`keySvg ${txt.element}`}\n\t\t\tid={txt.element}\n\t\t\tonClick={() => handleClick(txt.element)}\n\t\t/>\n\t);\n};\n\nexport default KeyTxt;\n","import React, { useState, useContext } from 'react';\n\nimport AppContext from '../context/AppContext';\n\nimport Key from '../components/key';\nimport KeySvg from '../components/KeySvg';\nimport KeyTxt from '../components/KeyTxt';\n\nimport '../styles/Keyboard.scss';\n\nconst Keyboard = () => {\n\tconst { state } = useContext(AppContext);\n\tconst array = state.alfabeto;\n\n\tconst arrayNumbers = [0, 1, 2, 3, 4, 5, 6, 7, 8, 9];\n\n\treturn (\n\t\t<aside className=\"keyboard\">\n\t\t\t<div className=\"keyboard__alfaNumerico\">\n\t\t\t\t<div>\n\t\t\t\t\t{arrayNumbers.map((element) => (\n\t\t\t\t\t\t<Key element={element} key={`key-${element}`} />\n\t\t\t\t\t))}\n\t\t\t\t</div>\n\t\t\t\t<div>\n\t\t\t\t\t{array[0].map((elm) => (\n\t\t\t\t\t\t<Key element={elm} key={`key-${elm}`} />\n\t\t\t\t\t))}\n\t\t\t\t</div>\n\t\t\t\t<div>\n\t\t\t\t\t{array[1].map((elm) => (\n\t\t\t\t\t\t<Key element={elm} key={`key-${elm}`} />\n\t\t\t\t\t))}\n\t\t\t\t</div>\n\t\t\t\t<div className=\"keyboard__alfaNumerico__flex\">\n\t\t\t\t\t<KeySvg element={'shift-fill'} key={`key-fill`} />\n\t\t\t\t\t{array[2].map((elm) => (\n\t\t\t\t\t\t<Key element={elm} key={`key-${elm}`} />\n\t\t\t\t\t))}\n\t\t\t\t\t<KeySvg element={'backspace'} key={`key-backspace`} />\n\t\t\t\t</div>\n\t\t\t\t<div className=\"keyboard__alfaNumerico__flex\">\n\t\t\t\t\t<KeyTxt element={'DEL'} key={`key-del`} />\n\t\t\t\t\t<Key element={'espacio'} key={`key-espacio`} />\n\t\t\t\t\t<KeySvg element={'caret-left'} key={`key-caret-left`} />\n\t\t\t\t\t<KeySvg element={'caret-right'} key={`key-caret-right`} />\n\t\t\t\t\t<KeyTxt element={'INI'} key={`key-ini`} />\n\t\t\t\t\t<KeyTxt element={'FIN'} key={`key-fin`} />\n\t\t\t\t</div>\n\t\t\t</div>\n\t\t\t<div className=\"keyboard__simbolos\">simbolos</div>\n\t\t</aside>\n\t);\n};\n\nexport default Keyboard;\n","import React, { useState, useContext, useEffect } from 'react';\n\nimport AppContext from '../context/AppContext';\nimport AppContextMover from '../context/AppContextMover';\nimport AppContextLapiz from '../context/AppContextLapiz';\nimport AppContextBorrador from '../context/AppContextBorrador';\nimport AppContextLinea from '../context/AppContextLinea';\nimport AppContextCuadrado from '../context/AppContextCuadrado';\nimport AppContextCuadricula from '../context/AppContextCanvas';\nimport AppContextPlano from '../context/AppContextPlano';\n\nimport Keyboard from '../containers/Keyboard';\n\nimport '../styles/NavIzq.scss';\nimport moverIcon from '../assets/icons/move1.svg';\nimport lapizIcon from '../assets/icons/pen1.svg';\nimport borradorIcon from '../assets/icons/eraser1.svg';\nimport calculadoraIcon from '../assets/icons/calculator.svg';\nimport planoIcon from '../assets/icons/graph-up.svg';\nimport plusIcon from '../assets/icons/plus-square.svg';\nimport textIcon from '../assets/icons/textarea.svg';\nimport zoomInIcon from '../assets/icons/zoom-in.svg';\nimport zoomOutIcon from '../assets/icons/zoom-out.svg';\nimport cuadradoIcon from '../assets/icons/square.svg';\nimport lineaIcon from '../assets/icons/linea.svg';\nimport funcionIcon from '../assets/icons/function1.svg';\nimport sumatoriaIcon from '../assets/icons/sumatoria1.svg';\nimport imageIcon from '../assets/icons/image1.svg';\n\nimport cuadriculaIcon from '../assets/icons/cuadricula.svg';\nimport keyboardIcon from '../assets/icons/keyboard1.svg';\n\nconst NavIzq = () => {\n\t// useContext:\n\tconst { state, updateCanvasPaleta } = useContext(AppContext);\n\tconst { updateMoverActive } = useContext(AppContextMover);\n\tconst { updateLapizActive } = useContext(AppContextLapiz);\n\tconst { updateBorradorActive } = useContext(AppContextBorrador);\n\tconst { updateCuadradoActive } = useContext(AppContextCuadrado);\n\tconst { updateCuadriculaActive } = useContext(AppContextCuadricula);\n\tconst { updateLineaActive } = useContext(AppContextLinea);\n\tconst { updatePlanoActive } = useContext(AppContextPlano);\n\n\t// useState:\n\tconst [toggleKeyboard, setToggleKeyboard] = useState(false);\n\n\tconst iconosPaleta = [\n\t\t[moverIcon, 'moverIcon'],\n\t\t[lapizIcon, 'lapizIcon'],\n\t\t[borradorIcon, 'borradorIcon'],\n\t\t// [funcionIcon, 'funcionIcon'],\n\t\t// [sumatoriaIcon, 'sumatoriaIcon'],\n\t\t// [textIcon, 'textIcon'],\n\t\t[lineaIcon, 'lineaIcon'],\n\t\t[cuadradoIcon, 'cuadradoIcon'],\n\t\t// [calculadoraIcon, 'calculadoraIcon'],\n\t\t[planoIcon, 'planoIcon'],\n\t\t// [imageIcon, 'imageIcon'],\n\t\t// [zoomInIcon, 'zoomInIcon'],\n\t\t// [zoomOutIcon, 'zoomOutIcon'],\n\t\t[cuadriculaIcon, 'cuadriculaIcon'],\n\t];\n\n\tconst handleIcon = (icon) => {\n\t\t// HOOKS - useInitialState:\n\t\tupdateCanvasPaleta(icon);\n\n\t\t// HOOKS - useLapiz:\n\t\tswitch (icon) {\n\t\t\tcase 'moverIcon':\n\t\t\t\tupdateMoverActive(true);\n\t\t\t\tupdateLapizActive(false);\n\t\t\t\tupdateBorradorActive(false);\n\t\t\t\tupdateLineaActive(false);\n\t\t\t\tupdateCuadradoActive(false);\n\t\t\t\tupdatePlanoActive(false);\n\t\t\t\tupdateCuadriculaActive(false);\n\t\t\t\tbreak;\n\t\t\tcase 'lapizIcon':\n\t\t\t\tupdateMoverActive(false);\n\t\t\t\tupdateLapizActive(true);\n\t\t\t\tupdateBorradorActive(false);\n\t\t\t\tupdateLineaActive(false);\n\t\t\t\tupdateCuadradoActive(false);\n\t\t\t\tupdatePlanoActive(false);\n\t\t\t\tupdateCuadriculaActive(false);\n\t\t\t\tbreak;\n\t\t\tcase 'borradorIcon':\n\t\t\t\tupdateMoverActive(false);\n\t\t\t\tupdateLapizActive(false);\n\t\t\t\tupdateBorradorActive(true);\n\t\t\t\tupdateLineaActive(false);\n\t\t\t\tupdateCuadradoActive(false);\n\t\t\t\tupdatePlanoActive(false);\n\t\t\t\tupdateCuadriculaActive(false);\n\t\t\t\tbreak;\n\t\t\tcase 'lineaIcon':\n\t\t\t\tupdateMoverActive(false);\n\t\t\t\tupdateLapizActive(false);\n\t\t\t\tupdateBorradorActive(false);\n\t\t\t\tupdateLineaActive(true);\n\t\t\t\tupdateCuadradoActive(false);\n\t\t\t\tupdatePlanoActive(false);\n\t\t\t\tupdateCuadriculaActive(false);\n\t\t\t\tbreak;\n\t\t\tcase 'cuadradoIcon':\n\t\t\t\tupdateMoverActive(false);\n\t\t\t\tupdateLapizActive(false);\n\t\t\t\tupdateBorradorActive(false);\n\t\t\t\tupdateLineaActive(false);\n\t\t\t\tupdateCuadradoActive(true);\n\t\t\t\tupdatePlanoActive(false);\n\t\t\t\tupdateCuadriculaActive(false);\n\t\t\t\tbreak;\n\t\t\tcase 'planoIcon':\n\t\t\t\tupdateMoverActive(false);\n\t\t\t\tupdateLapizActive(false);\n\t\t\t\tupdateBorradorActive(false);\n\t\t\t\tupdateLineaActive(false);\n\t\t\t\tupdateCuadradoActive(false);\n\t\t\t\tupdatePlanoActive(true);\n\t\t\t\tupdateCuadriculaActive(true);\n\t\t\t\tbreak;\n\t\t\tcase 'cuadriculaIcon':\n\t\t\t\tupdateMoverActive(false);\n\t\t\t\tupdateLapizActive(false);\n\t\t\t\tupdateBorradorActive(false);\n\t\t\t\tupdateLineaActive(false);\n\t\t\t\tupdateCuadradoActive(false);\n\t\t\t\tupdatePlanoActive(false);\n\t\t\t\tupdateCuadriculaActive(true);\n\t\t\t\tbreak;\n\t\t\tdefault:\n\t\t\t\tconsole.log('Opcion no registrada!!!');\n\t\t\t\tbreak;\n\t\t}\n\t};\n\n\t// useEffect:\n\tuseEffect(() => {\n\t\t//console.log('useEffect: [state]');\n\t\ticonosPaleta.map((elem) => {\n\t\t\tif (state.active == elem[1]) {\n\t\t\t\tdocument.getElementById(elem[1]).classList.add('navIzq__nav__active');\n\t\t\t} else {\n\t\t\t\tdocument\n\t\t\t\t\t.getElementById(elem[1])\n\t\t\t\t\t.classList.remove('navIzq__nav__active');\n\t\t\t}\n\t\t});\n\t\treturn () => {\n\t\t\t//console.log('return useEffect: [state]');\n\t\t};\n\t}, [state]);\n\n\treturn (\n\t\t<nav className=\"navIzq__nav\">\n\t\t\t<div className=\"navIzq__nav__top\">\n\t\t\t\t{iconosPaleta.map((elem) => (\n\t\t\t\t\t<img\n\t\t\t\t\t\tsrc={elem[0]}\n\t\t\t\t\t\tonClick={() => handleIcon(elem[1])}\n\t\t\t\t\t\tkey={elem[1]}\n\t\t\t\t\t\tid={elem[1]}\n\t\t\t\t\t/>\n\t\t\t\t))}\n\t\t\t</div>\n\t\t\t<div className=\"navIzq__nav__botton\">\n\t\t\t\t<img\n\t\t\t\t\tclassName=\"navIzq__nav__div__keyboard\"\n\t\t\t\t\tsrc={keyboardIcon}\n\t\t\t\t\tonClick={() => setToggleKeyboard(!toggleKeyboard)}\n\t\t\t\t/>\n\t\t\t</div>\n\t\t\t{toggleKeyboard && <Keyboard />}\n\t\t</nav>\n\t);\n};\n\nexport default NavIzq;\n","const utilsCuadricula_graficaCuadricula = (context, canvas) => {\n\tcontext.lineWidth = canvas.lineaGrosor; // lineaGrosor\n\tcontext.strokeStyle = canvas.lineaColor; // lineaColor\n\tcontext.fillStyle = 'white';\n\tcontext.setLineDash([0, 0]);\n\n\tcontext.beginPath();\n\tcontext.moveTo(0, 0); // (x_ini, y_ini)\n\tcontext.lineTo(canvas.width, 0); // (x_fin, y_ini)\n\tcontext.lineTo(canvas.width, canvas.height); // (x_fin, y_ini)\n\tcontext.lineTo(0, canvas.height); // (x_fin, y_ini)\n\tcontext.lineTo(0, 0); // (x_fin, y_ini)\n\tcontext.fill();\n\tcontext.stroke(); // bordeColor = true\n\tcontext.closePath();\n\n\t// VERTICAL: |\n\tif (canvas.tipoCuadricula == 'cuadricula') {\n\t\tlet nroLineasV = canvas.width / canvas.cuadriculaWidth - 1;\n\t\tlet incV = canvas.cuadriculaWidth;\n\t\tlet i = 0;\n\t\tfor (i = 0; i < nroLineasV; i++) {\n\t\t\tcontext.beginPath();\n\t\t\tcontext.moveTo(incV, 0); // (x_ini, y_ini)\n\t\t\tcontext.lineTo(incV, canvas.height); // (x_fin, y_ini)\n\t\t\tcontext.stroke(); // bordeColor = true\n\t\t\tincV = incV + canvas.cuadriculaWidth;\n\t\t}\n\t}\n\t// HORIZONTAL: -\n\tif (\n\t\tcanvas.tipoCuadricula == 'cuadricula' ||\n\t\tcanvas.tipoCuadricula == 'linea'\n\t) {\n\t\tlet nroLineasH = canvas.height / canvas.cuadriculaWidth - 1;\n\t\tlet incH = canvas.cuadriculaWidth;\n\t\tlet i = 0;\n\t\tfor (i = 0; i < nroLineasH; i++) {\n\t\t\tcontext.beginPath();\n\t\t\tcontext.moveTo(0, incH); // (x_ini, y_ini)\n\t\t\tcontext.lineTo(canvas.width, incH); // (x_fin, y_ini)\n\t\t\tcontext.stroke(); // bordeColor = true\n\t\t\tincH = incH + canvas.cuadriculaWidth;\n\t\t}\n\t}\n};\n\nexport { utilsCuadricula_graficaCuadricula };\n","// cuadrado segmentado:\nconst utilsCuadrado_graficaCuadradoSegmentado = (context, cuadrado) => {\n\tcontext.strokeStyle = 'red'; // borde Color\n\tcontext.fillStyle = 'yellow'; // fondo Color\n\tcontext.lineWidth = 1; // borde grosor de linea\n\tcontext.setLineDash([14, 4]); // lineas segmentadas\n\tlet width = cuadrado.x_fin - cuadrado.x_ini;\n\tlet height = cuadrado.y_fin - cuadrado.y_ini;\n\n\tcontext.beginPath();\n\tcontext.strokeRect(cuadrado.x_ini, cuadrado.y_ini, width, height);\n\tcontext.fillRect(cuadrado.x_ini, cuadrado.y_ini, width, height);\n\tcontext.closePath();\n};\n\n// limpia el canvas:\nconst utilsCuadrado_LimpiaCuadrado = (context, cuadrado) => {\n\tlet width = cuadrado.x_fin - cuadrado.x_ini;\n\tlet height = cuadrado.y_fin - cuadrado.y_ini;\n\tcontext.clearRect(cuadrado.x_ini, cuadrado.y_ini, width, height);\n};\n\n// cuadrado:\nconst utilsCuadrado_graficaCuadrado = (context, cuadrado) => {\n\tcontext.strokeStyle = cuadrado.bordeColor; // bordeColor\n\tcontext.fillStyle = cuadrado.fondoColor; // fondoColor\n\tcontext.lineWidth = cuadrado.bordeGrosor; // bordeGrosor\n\tcontext.setLineDash([0, 0]); // lineas no segmentadas\n\n\tcontext.beginPath();\n\tcontext.moveTo(cuadrado.x_ini, cuadrado.y_ini); // (x_ini, y_ini)\n\tcontext.lineTo(cuadrado.x_fin, cuadrado.y_ini); // (x_fin, y_ini)\n\tcontext.lineTo(cuadrado.x_fin, cuadrado.y_fin); // (x_fin, y_fin)\n\tcontext.lineTo(cuadrado.x_ini, cuadrado.y_fin); // (x_ini, y_fin)\n\tcontext.lineTo(cuadrado.x_ini, cuadrado.y_ini); // (x_ini, y_ini)\n\n\tcuadrado.fondoEstado ? context.fill() : ''; // fondoColor = true\n\tcuadrado.bordeEstado ? context.stroke() : ''; // bordeColor = true\n\tcontext.closePath();\n};\n\n// GRAFICA CUADRADOS - HISORIA:\nconst utilsCuadrado_graficaCuadradoHistoria = (context, array) => {\n\tarray.forEach((element) => utilsCuadrado_graficaCuadrado(context, element));\n};\n\n// GRAFICA CUADRADOS - HISORIA MENOS EL I-ESIMO id:\nconst UC_graficaCuadradoHistoria_menosI = (context, array, i) => {\n\tarray.forEach((element) =>\n\t\telement.id != i ? utilsCuadrado_graficaCuadrado(context, element) : ''\n\t);\n};\n\nexport {\n\tutilsCuadrado_graficaCuadrado,\n\tutilsCuadrado_graficaCuadradoHistoria,\n\tutilsCuadrado_graficaCuadradoSegmentado,\n\tutilsCuadrado_LimpiaCuadrado,\n\tUC_graficaCuadradoHistoria_menosI,\n};\n","// LINEA:\nconst utilsLinea_graficaLinea = (context, linea) => {\n\tcontext.lineWidth = linea.grosor;\n\tcontext.strokeStyle = linea.color;\n\tcontext.setLineDash([0, 0]);\n\n\tcontext.beginPath();\n\tcontext.moveTo(linea.x_ini, linea.y_ini);\n\tcontext.lineTo(linea.x_fin, linea.y_fin);\n\tcontext.stroke();\n\tcontext.closePath();\n};\n\n// LAPIZ - HISORIA:\nconst utilsLinea_graficaLineaHistoria = (context, array) => {\n\tarray.forEach((element) => {\n\t\tutilsLinea_graficaLinea(context, element);\n\t});\n};\n\nexport { utilsLinea_graficaLinea, utilsLinea_graficaLineaHistoria };\n","// LAPIZ:\nconst utilsLapiz_graficaLapiz = (context, lapiz) => {\n\tcontext.lineWidth = lapiz.grosor;\n\tcontext.strokeStyle = lapiz.color;\n\tcontext.setLineDash([0, 0]);\n\tcontext.beginPath();\n\tlet sw = true;\n\tlapiz.historiaLinea.forEach((element) => {\n\t\tsw ? context.moveTo(element[0], element[1]) : '';\n\t\tsw = false;\n\t\tcontext.lineTo(element[2], element[3]);\n\t});\n\tcontext.stroke();\n\tcontext.closePath();\n};\n\n// LAPIZ - HISORIA:\nconst utilsLapiz_graficaLapizHistoria = (context, array) => {\n\tarray.forEach((element) => utilsLapiz_graficaLapiz(context, element));\n};\n\nexport { utilsLapiz_graficaLapiz, utilsLapiz_graficaLapizHistoria };\n","const Texto = {\n\ttexto: 'Hola mundo', //texto de prueba\n\ttexto_color: 'black', //color externo\n\ttexto_fondo: 'black', //color de relleno\n\ttexto_font: 'bold 20px arial', //estilo de texto\n};\nconst generaRango = (start, stop, step) =>\n\tArray.from({ length: (stop - start) / step + 1 }, (_, i) => start + i * step);\n// ej. let array = generaRango(inicio, fin, salto);\n\nconst uPlano_graficaNumeros = (context, plano) => {\n\tlet arrayX = [];\n\tlet width = plano.x_fin - plano.x_ini;\n\tlet n = parseInt(width / plano.width_cuadricula);\n\tlet x = plano.x_min;\n\tfor (let i = 0; i < n - 1; i++) {\n\t\tarrayX.push(x);\n\t\tx = x + plano.salto;\n\t}\n\tcontext.fillStyle = 'black'; //color de relleno\n\tcontext.font = '11px arial'; //estilo de texto\n\tcontext.beginPath(); //iniciar ruta\n\tlet x1 = plano.x_ini + plano.width_cuadricula - 3;\n\tlet y1 = plano.y_ini + (plano.y_max + 1) * plano.width_cuadricula + 11;\n\tarrayX.forEach((x) => {\n\t\tx != 0\n\t\t\t? context.fillText(x, x1, y1) //texto con método stroke\n\t\t\t: context.fillText(x, x1 - 5, y1);\n\t\tx1 = x1 + plano.width_cuadricula;\n\t});\n\tcontext.closePath();\n\n\tlet arrayY = [];\n\tlet heigth = plano.y_fin - plano.y_ini;\n\tn = parseInt(heigth / plano.width_cuadricula);\n\tlet y = plano.y_max;\n\tfor (let i = 0; i < n; i++) {\n\t\tarrayY.push(y);\n\t\ty = y - plano.salto;\n\t}\n\tx1 = plano.x_ini + (plano.x_min * -1 + 1) * plano.width_cuadricula - 3;\n\ty1 = plano.y_ini + plano.width_cuadricula + 5;\n\n\tcontext.textAlign = 'end';\n\tcontext.beginPath(); //iniciar ruta\n\tarrayY.forEach((y) => {\n\t\tif (y != 0) context.fillText(y, x1, y1); //texto con método stroke\n\t\ty1 = y1 + plano.width_cuadricula;\n\t});\n\tcontext.closePath();\n\n\tcontext.textAlign = 'start';\n\tcontext.beginPath(); //iniciar ruta\n\tx1 = plano.x_ini + (plano.x_min * -1 + 1) * plano.width_cuadricula + 8;\n\ty1 = plano.y_ini + 12;\n\tcontext.fillText('Y', x1, y1);\n\tx1 = plano.x_fin - 12;\n\ty1 = plano.y_ini + (plano.y_max + 1) * plano.width_cuadricula - 10;\n\tcontext.fillText('X', x1, y1);\n\tcontext.closePath();\n};\nconst utilsPlano_graficaCuadricula = (context, plano) => {\n\tcontext.lineWidth = 1; // lineaGrosor\n\t//context.strokeStyle = plano.color_cuadricula; // lineaColor\n\tcontext.strokeStyle = '#d5dbdb'; // lineaColor\n\tcontext.setLineDash([0, 0]);\n\tlet width = plano.x_fin - plano.x_ini;\n\tlet width_cuadricula = plano.width_cuadricula;\n\t// VERTICAL: |\n\tlet nroLineasV = width / width_cuadricula - 1;\n\tlet incV = width_cuadricula;\n\tlet x1 = plano.x_ini + incV;\n\tlet y1 = plano.y_ini;\n\tlet y2 = plano.y_fin;\n\tlet i = 0;\n\tfor (i = 0; i < nroLineasV; i++) {\n\t\tcontext.beginPath();\n\t\tcontext.moveTo(x1, y1); // (x_ini, y_ini)\n\t\tcontext.lineTo(x1, y2); // (x_fin, y_ini)\n\t\tcontext.stroke(); // bordeColor = true\n\t\tx1 = x1 + incV;\n\t}\n\t// HORIZONTAL: -\n\tlet height = plano.y_fin - plano.y_ini;\n\tlet nroLineasH = height / width_cuadricula - 1;\n\tlet incH = width_cuadricula;\n\tx1 = plano.x_ini;\n\tlet x2 = plano.x_fin;\n\ty1 = plano.y_ini + incH;\n\n\tfor (i = 0; i < nroLineasH; i++) {\n\t\tcontext.beginPath();\n\t\tcontext.moveTo(x1, y1); // (x_ini, y_ini)\n\t\tcontext.lineTo(x2, y1); // (x_fin, y_ini)\n\t\tcontext.stroke(); // bordeColor = true\n\t\ty1 = y1 + incH;\n\t}\n};\n// PLANO SIN EJES:\nconst uPlano_graficaCuadrado = (context, cuadrado) => {\n\tcontext.strokeStyle = cuadrado.bordeColor; // bordeColor\n\tcontext.fillStyle = cuadrado.fondoColor; // fondoColor\n\tcontext.lineWidth = cuadrado.bordeGrosor; // bordeGrosor\n\tcontext.setLineDash([0, 0]); // lineas no segmentadas\n\n\tcontext.beginPath();\n\tcontext.moveTo(cuadrado.x_ini, cuadrado.y_ini); // (x_ini, y_ini)\n\tcontext.lineTo(cuadrado.x_fin, cuadrado.y_ini); // (x_fin, y_ini)\n\tcontext.lineTo(cuadrado.x_fin, cuadrado.y_fin); // (x_fin, y_fin)\n\tcontext.lineTo(cuadrado.x_ini, cuadrado.y_fin); // (x_ini, y_fin)\n\tcontext.lineTo(cuadrado.x_ini, cuadrado.y_ini); // (x_ini, y_ini)\n\n\tcuadrado.fondoEstado ? context.fill() : ''; // fondoColor = true\n\tcuadrado.bordeEstado ? context.stroke() : ''; // bordeColor = true\n\tcontext.closePath();\n};\n// LINEA:\nconst utilsLinea_graficaLinea = (context, linea) => {\n\tcontext.lineWidth = linea.grosor;\n\tcontext.strokeStyle = linea.color;\n\tcontext.setLineDash([0, 0]);\n\n\tcontext.beginPath();\n\tcontext.moveTo(linea.x_ini, linea.y_ini);\n\tcontext.lineTo(linea.x_fin, linea.y_fin);\n\tcontext.stroke();\n\tcontext.closePath();\n};\n// TRIANGULO:\nconst utilsPlano_graficaTriangulo = (context, plano) => {\n\tlet x1 = plano.x_ini + (plano.x_min * -1 + 1) * plano.width_cuadricula;\n\tlet y1 = plano.y_ini + 2;\n\tlet x2 = x1 - 5;\n\tlet y2 = y1 + 5;\n\tlet x3 = x1 + 5;\n\tlet y3 = y1 + 5;\n\tcontext.beginPath();\n\tcontext.fillStyle = 'black';\n\tcontext.moveTo(x1, y1);\n\tcontext.lineTo(x2, y2);\n\tcontext.lineTo(x3, y3);\n\tcontext.closePath();\n\tcontext.stroke();\n\tcontext.fill();\n\n\tx1 = plano.x_fin - 2;\n\ty1 = plano.y_ini + (plano.y_max + 1) * plano.width_cuadricula;\n\tx2 = x1 - 5;\n\ty2 = y1 - 5;\n\tx3 = x1 - 5;\n\ty3 = y1 + 5;\n\tcontext.beginPath();\n\tcontext.fillStyle = 'black';\n\tcontext.moveTo(x1, y1);\n\tcontext.lineTo(x2, y2);\n\tcontext.lineTo(x3, y3);\n\tcontext.closePath();\n\tcontext.stroke();\n\tcontext.fill();\n};\nconst uPlano_graficaCuadradoConEjes = (context, plano) => {\n\tcontext.strokeStyle = plano.bordeColor; // bordeColor\n\tcontext.fillStyle = plano.fondoColor; // fondoColor\n\tcontext.lineWidth = plano.bordeGrosor; // bordeGrosor\n\tcontext.setLineDash([0, 0]); // lineas no segmentadas\n\n\tcontext.beginPath();\n\tcontext.moveTo(plano.x_ini, plano.y_ini); // (x_ini, y_ini)\n\tcontext.lineTo(plano.x_fin, plano.y_ini); // (x_fin, y_ini)\n\tcontext.lineTo(plano.x_fin, plano.y_fin); // (x_fin, y_fin)\n\tcontext.lineTo(plano.x_ini, plano.y_fin); // (x_ini, y_fin)\n\tcontext.lineTo(plano.x_ini, plano.y_ini); // (x_ini, y_ini)\n\n\tplano.fondoEstado ? context.fill() : ''; // fondoColor = true\n\tplano.bordeEstado ? context.stroke() : ''; // bordeColor = true\n\tcontext.closePath();\n\n\tutilsPlano_graficaCuadricula(context, plano);\n\tlet Linea = {\n\t\tid: 0,\n\t\tgrosor: 1,\n\t\tcolor: 'black',\n\t\tx_ini: 0,\n\t\ty_ini: 0,\n\t\tx_fin: 0,\n\t\ty_fin: 0,\n\t};\n\tLinea.x_ini = plano.x_ini + (plano.x_min * -1 + 1) * plano.width_cuadricula;\n\tLinea.x_fin = Linea.x_ini;\n\tLinea.y_ini = plano.y_ini;\n\tLinea.y_fin = plano.y_fin;\n\tutilsLinea_graficaLinea(context, Linea); // VERTICAL\n\tLinea.x_ini = plano.x_ini;\n\tLinea.x_fin = plano.x_fin;\n\tLinea.y_ini = plano.y_ini + (plano.y_max + 1) * plano.width_cuadricula;\n\tLinea.y_fin = Linea.y_ini;\n\tutilsLinea_graficaLinea(context, Linea); // HORIZONTAL\n\n\tutilsPlano_graficaTriangulo(context, plano);\n\t// NUMEROS:\n\tuPlano_graficaNumeros(context, plano);\n};\n\n// GRAFICA PLANOS - HISORIA:\nconst uPlano_graficaCuadradoHistoria = (context, array) => {\n\tarray.forEach((element) => uPlano_graficaCuadrado(context, element));\n};\nconst uPlano_graficaCuadradoHistoriaConEjes = (context, array) => {\n\tarray.forEach((element) => uPlano_graficaCuadradoConEjes(context, element));\n};\n\nexport {\n\tuPlano_graficaCuadrado,\n\tuPlano_graficaCuadradoConEjes,\n\tuPlano_graficaCuadradoHistoria,\n\tuPlano_graficaCuadradoHistoriaConEjes,\n};\n","// SELECT CUADRADO DE HISTORIA:\nconst u_getCuadrado = (array, x, y) => {\n\tlet resp = '';\n\tarray.forEach((elem) =>\n\t\telem.x_ini < x && x < elem.x_fin && elem.y_ini < y && y < elem.y_fin\n\t\t\t? (resp = elem)\n\t\t\t: ''\n\t);\n\treturn resp;\n};\n// MUEVE CUADRADO SELECT:\nconst u_moverCuadrado = (cuadrado, mouse) => {\n\tconst recorrido_x = mouse.pos.x - mouse.pos_prev.x;\n\tconst recorrido_y = mouse.pos.y - mouse.pos_prev.y;\n\tcuadrado.x_ini = cuadrado.x_ini + recorrido_x;\n\tcuadrado.y_ini = cuadrado.y_ini + recorrido_y;\n\tcuadrado.x_fin = cuadrado.x_fin + recorrido_x;\n\tcuadrado.y_fin = cuadrado.y_fin + recorrido_y;\n\treturn cuadrado;\n};\n// UPDATE ZISE CUADRADO SELECT:\nconst u_updateZiseCuadrado = (cuadrado, mouse) => {\n\tconst recorrido_y = mouse.pos.y - mouse.pos_prev.y;\n\tconst recorrido_x = mouse.pos.x - mouse.pos_prev.x;\n\tswitch (mouse.cuadrado_pto) {\n\t\tcase 'top':\n\t\t\tcuadrado.y_ini = cuadrado.y_ini + recorrido_y;\n\t\t\tbreak;\n\t\tcase 'right':\n\t\t\tcuadrado.x_fin = cuadrado.x_fin + recorrido_x;\n\t\t\tbreak;\n\t\tcase 'button':\n\t\t\tcuadrado.y_fin = cuadrado.y_fin + recorrido_y;\n\t\t\tbreak;\n\t\tcase 'lefth':\n\t\t\tcuadrado.x_ini = cuadrado.x_ini + recorrido_x;\n\t\t\tbreak;\n\t\tdefault:\n\t\t\tconsole.log('ocurrio un error');\n\t\t\tbreak;\n\t}\n\treturn cuadrado;\n};\n// CUADRADOS PEQUEÑOS PAR UPDATE DEL CUADRADO:\nconst get_pts_redimencion = (cuadrado) => {\n\tlet width_p = 10;\n\tlet width_c = 2;\n\n\tlet x_ini = cuadrado.x_ini - width_c;\n\tlet y_ini = cuadrado.y_ini - width_c;\n\tlet x_fin = cuadrado.x_fin + width_c;\n\tlet y_fin = cuadrado.y_fin + width_c;\n\n\tlet vectorPuntosCuadrado = [\n\t\t{\n\t\t\tx1: x_ini + (x_fin - x_ini) / width_c - width_p,\n\t\t\ty1: y_ini - width_p,\n\t\t\tx2: x_ini + (x_fin - x_ini) / width_c + width_p,\n\t\t\ty2: y_ini + width_p,\n\t\t},\n\t\t{\n\t\t\tx1: x_fin - width_p,\n\t\t\ty1: y_ini + (y_fin - y_ini) / width_c - width_p,\n\t\t\tx2: x_fin + width_p,\n\t\t\ty2: y_ini + (y_fin - y_ini) / width_c + width_p,\n\t\t},\n\t\t{\n\t\t\tx1: x_ini + (x_fin - x_ini) / width_c - width_p,\n\t\t\ty1: y_fin - width_p,\n\t\t\tx2: x_ini + (x_fin - x_ini) / width_c + width_p,\n\t\t\ty2: y_fin + width_p,\n\t\t},\n\t\t{\n\t\t\tx1: x_ini - width_p,\n\t\t\ty1: y_ini + (y_fin - y_ini) / width_c - width_p,\n\t\t\tx2: x_ini + width_p,\n\t\t\ty2: y_ini + (y_fin - y_ini) / width_c + width_p,\n\t\t},\n\t];\n\treturn vectorPuntosCuadrado;\n};\n// CUADRADO SEGMENTADO:\nconst u_cuadradoSegmentado = (context, cuadrado) => {\n\tcontext.strokeStyle = 'red'; // borde Color\n\tcontext.lineWidth = 2; // borde grosor de linea\n\tcontext.setLineDash([14, 4]); // lineas segmentadas\n\n\tlet x_ini = cuadrado.x_ini - 2;\n\tlet y_ini = cuadrado.y_ini - 2;\n\tlet x_fin = cuadrado.x_fin + 2;\n\tlet y_fin = cuadrado.y_fin + 2;\n\n\tcontext.beginPath();\n\tcontext.moveTo(x_ini, y_ini); // (x_ini, y_ini)\n\tcontext.lineTo(x_fin, y_ini); // (x_fin, y_ini)\n\tcontext.lineTo(x_fin, y_fin); // (x_fin, y_fin)\n\tcontext.lineTo(x_ini, y_fin); // (x_ini, y_fin)\n\tcontext.lineTo(x_ini, y_ini); // (x_ini, y_ini)\n\tcontext.stroke();\n\tcontext.closePath();\n\n\tcontext.fillStyle = 'red'; // borde Color\n\tcontext.setLineDash([14, 4]); // lineas segmentadas\n\n\tlet array = get_pts_redimencion(cuadrado);\n\tarray.forEach((elem) => {\n\t\tcontext.beginPath();\n\t\tcontext.moveTo(elem.x1, elem.y1); // (x_ini, y_ini)\n\t\tcontext.lineTo(elem.x2, elem.y1); // (x_fin, y_ini)\n\t\tcontext.lineTo(elem.x2, elem.y2); // (x_fin, y_fin)\n\t\tcontext.lineTo(elem.x1, elem.y2); // (x_ini, y_fin)\n\t\tcontext.lineTo(elem.x1, elem.y1); // (x_ini, y_ini)\n\t\tcontext.fill();\n\t\tcontext.closePath();\n\t});\n};\n\n// SELECT LINEA DE HISTORIA:\nconst u_getLinea = (array, x, y) => {\n\tlet resp = '';\n\tarray.forEach((elem) => {\n\t\tlet p = { x1: elem.x_ini, y1: elem.y_ini, x2: elem.x_fin, y2: elem.y_fin };\n\t\tlet a = p.y1 - p.y2;\n\t\tlet b = p.x2 - p.x1;\n\t\tlet c = p.y1 * (p.x1 - p.x2) - p.x1 * (p.y1 - p.y2);\n\t\tlet dnum = a * x + b * y + c;\n\t\tdnum < 0 ? (dnum = dnum * -1) : '';\n\t\tlet dden = Math.sqrt(a * a + b * b);\n\t\tlet d = dnum / dden;\n\t\tif (d < 20) resp = elem;\n\t});\n\treturn resp;\n};\n// CUADRADOS PARA UPDATE LINEA:\nconst get_pts_redimencion_linea = (linea) => {\n\tlet width_p = 10;\n\n\tlet x_ini = linea.x_ini;\n\tlet y_ini = linea.y_ini;\n\tlet x_fin = linea.x_fin;\n\tlet y_fin = linea.y_fin;\n\n\tlet vectorPuntosLinea = [\n\t\t{\n\t\t\tx1: x_ini - width_p,\n\t\t\ty1: y_ini - width_p,\n\t\t\tx2: x_ini + width_p,\n\t\t\ty2: y_ini + width_p,\n\t\t},\n\t\t{\n\t\t\tx1: x_fin - width_p,\n\t\t\ty1: y_fin - width_p,\n\t\t\tx2: x_fin + width_p,\n\t\t\ty2: y_fin + width_p,\n\t\t},\n\t];\n\treturn vectorPuntosLinea;\n};\n// LINEA SEGMENTADO:\nconst u_lineaSegmentado = (context, linea) => {\n\tcontext.strokeStyle = 'red'; // borde Color\n\tcontext.lineWidth = 1; // borde grosor de linea\n\tcontext.setLineDash([10, 4]); // lineas segmentadas\n\n\tlet x_ini = linea.x_ini;\n\tlet y_ini = linea.y_ini;\n\tlet x_fin = linea.x_fin;\n\tlet y_fin = linea.y_fin;\n\n\tlet inc = 20;\n\n\tcontext.beginPath();\n\tcontext.moveTo(x_ini - inc, y_ini); // (x_ini, y_ini)\n\tcontext.lineTo(x_ini + inc, y_ini); // (x_fin, y_ini)\n\tcontext.lineTo(x_fin + inc, y_fin); // (x_fin, y_fin)\n\tcontext.lineTo(x_fin - inc, y_fin); // (x_ini, y_fin)\n\tcontext.lineTo(x_ini - inc, y_ini); // (x_ini, y_ini)\n\tcontext.stroke();\n\tcontext.closePath();\n\n\tcontext.fillStyle = 'red'; // borde Color\n\tcontext.setLineDash([10, 4]); // lineas segmentadas\n\n\tlet array = get_pts_redimencion_linea(linea);\n\tarray.forEach((elem) => {\n\t\tcontext.beginPath();\n\t\tcontext.moveTo(elem.x1, elem.y1); // (x_ini, y_ini)\n\t\tcontext.lineTo(elem.x2, elem.y1); // (x_fin, y_ini)\n\t\tcontext.lineTo(elem.x2, elem.y2); // (x_fin, y_fin)\n\t\tcontext.lineTo(elem.x1, elem.y2); // (x_ini, y_fin)\n\t\tcontext.lineTo(elem.x1, elem.y1); // (x_ini, y_ini)\n\t\tcontext.fill();\n\t\tcontext.closePath();\n\t});\n};\n// MUEVE LINEA SELECT:\nconst u_moverLinea = (linea, mouse) => {\n\tconst recorrido_x = mouse.pos.x - mouse.pos_prev.x;\n\tconst recorrido_y = mouse.pos.y - mouse.pos_prev.y;\n\tlinea.x_ini = linea.x_ini + recorrido_x;\n\tlinea.y_ini = linea.y_ini + recorrido_y;\n\tlinea.x_fin = linea.x_fin + recorrido_x;\n\tlinea.y_fin = linea.y_fin + recorrido_y;\n\treturn linea;\n};\n// UPDATE ZISE LINEA SELECT:\nconst u_updateZiseLinea = (linea, mouse) => {\n\tconst recorrido_y = mouse.pos.y - mouse.pos_prev.y;\n\tconst recorrido_x = mouse.pos.x - mouse.pos_prev.x;\n\tswitch (mouse.linea_pto) {\n\t\tcase 'ini':\n\t\t\tlinea.x_ini = linea.x_ini + recorrido_x;\n\t\t\tlinea.y_ini = linea.y_ini + recorrido_y;\n\t\t\tbreak;\n\t\tcase 'fin':\n\t\t\tlinea.x_fin = linea.x_fin + recorrido_x;\n\t\t\tlinea.y_fin = linea.y_fin + recorrido_y;\n\t\t\tbreak;\n\t\tdefault:\n\t\t\tconsole.log('ocurrio un error');\n\t\t\tbreak;\n\t}\n\treturn linea;\n};\n\n// PLANO:\nconst u_getPlano = (array, x, y) => {\n\tlet resp = '';\n\tarray.forEach((plano) =>\n\t\tplano.x_ini < x && x < plano.x_fin && plano.y_ini < y && y < plano.y_fin\n\t\t\t? (resp = plano)\n\t\t\t: ''\n\t);\n\treturn resp;\n};\n// PLANO SEGMENTADO:\nconst u_planoSegmentado = (context, cuadrado) => {\n\tcontext.strokeStyle = 'red'; // borde Color\n\tcontext.lineWidth = 2; // borde grosor de linea\n\tcontext.setLineDash([14, 4]); // lineas segmentadas\n\n\tlet x_ini = cuadrado.x_ini - 2;\n\tlet y_ini = cuadrado.y_ini - 2;\n\tlet x_fin = cuadrado.x_fin + 2;\n\tlet y_fin = cuadrado.y_fin + 2;\n\n\tcontext.beginPath();\n\tcontext.moveTo(x_ini, y_ini); // (x_ini, y_ini)\n\tcontext.lineTo(x_fin, y_ini); // (x_fin, y_ini)\n\tcontext.lineTo(x_fin, y_fin); // (x_fin, y_fin)\n\tcontext.lineTo(x_ini, y_fin); // (x_ini, y_fin)\n\tcontext.lineTo(x_ini, y_ini); // (x_ini, y_ini)\n\tcontext.stroke();\n\tcontext.closePath();\n\n\tcontext.fillStyle = 'red'; // borde Color\n\tcontext.setLineDash([14, 4]); // lineas segmentadas\n\n\tlet array = get_pts_redimencion(cuadrado);\n\tarray.forEach((elem) => {\n\t\tcontext.beginPath();\n\t\tcontext.moveTo(elem.x1, elem.y1); // (x_ini, y_ini)\n\t\tcontext.lineTo(elem.x2, elem.y1); // (x_fin, y_ini)\n\t\tcontext.lineTo(elem.x2, elem.y2); // (x_fin, y_fin)\n\t\tcontext.lineTo(elem.x1, elem.y2); // (x_ini, y_fin)\n\t\tcontext.lineTo(elem.x1, elem.y1); // (x_ini, y_ini)\n\t\tcontext.fill();\n\t\tcontext.closePath();\n\t});\n};\n// MUEVE PLANO SELECT:\nconst u_moverPlano = (plano, mouse) => {\n\tconst recorrido_x = mouse.pos.x - mouse.pos_prev.x;\n\tconst recorrido_y = mouse.pos.y - mouse.pos_prev.y;\n\tplano.x_ini = plano.x_ini + recorrido_x;\n\tplano.y_ini = plano.y_ini + recorrido_y;\n\tplano.x_fin = plano.x_fin + recorrido_x;\n\tplano.y_fin = plano.y_fin + recorrido_y;\n\treturn plano;\n};\n// CUADRADOS PEQUEÑOS PAR UPDATE DEL PLANO:\nconst get_pts_redimencion_plano = (cuadrado) => {\n\tlet width_p = 10;\n\tlet width_c = 2;\n\n\tlet x_ini = cuadrado.x_ini - width_c;\n\tlet y_ini = cuadrado.y_ini - width_c;\n\tlet x_fin = cuadrado.x_fin + width_c;\n\tlet y_fin = cuadrado.y_fin + width_c;\n\n\tlet vectorPuntosCuadrado = [\n\t\t{\n\t\t\tx1: x_ini + (x_fin - x_ini) / width_c - width_p,\n\t\t\ty1: y_ini - width_p,\n\t\t\tx2: x_ini + (x_fin - x_ini) / width_c + width_p,\n\t\t\ty2: y_ini + width_p,\n\t\t},\n\t\t{\n\t\t\tx1: x_fin - width_p,\n\t\t\ty1: y_ini + (y_fin - y_ini) / width_c - width_p,\n\t\t\tx2: x_fin + width_p,\n\t\t\ty2: y_ini + (y_fin - y_ini) / width_c + width_p,\n\t\t},\n\t\t{\n\t\t\tx1: x_ini + (x_fin - x_ini) / width_c - width_p,\n\t\t\ty1: y_fin - width_p,\n\t\t\tx2: x_ini + (x_fin - x_ini) / width_c + width_p,\n\t\t\ty2: y_fin + width_p,\n\t\t},\n\t\t{\n\t\t\tx1: x_ini - width_p,\n\t\t\ty1: y_ini + (y_fin - y_ini) / width_c - width_p,\n\t\t\tx2: x_ini + width_p,\n\t\t\ty2: y_ini + (y_fin - y_ini) / width_c + width_p,\n\t\t},\n\t];\n\treturn vectorPuntosCuadrado;\n};\n// UPDATE ZISE CUADRADO SELECT:\nconst u_updateZisePlano = (plano, mouse) => {\n\tconst recorrido_y = mouse.pos.y - mouse.pos_prev.y;\n\tconst recorrido_x = mouse.pos.x - mouse.pos_prev.x;\n\tswitch (mouse.plano_pto) {\n\t\tcase 'top':\n\t\t\tplano.y_ini = plano.y_ini + recorrido_y;\n\t\t\tbreak;\n\t\tcase 'right':\n\t\t\tplano.x_fin = plano.x_fin + recorrido_x;\n\t\t\tbreak;\n\t\tcase 'button':\n\t\t\tplano.y_fin = plano.y_fin + recorrido_y;\n\t\t\tbreak;\n\t\tcase 'lefth':\n\t\t\tplano.x_ini = plano.x_ini + recorrido_x;\n\t\t\tbreak;\n\t\tdefault:\n\t\t\tconsole.log('ocurrio un error');\n\t\t\tbreak;\n\t}\n\treturn plano;\n};\nexport {\n\tu_getCuadrado,\n\tu_moverCuadrado,\n\tu_cuadradoSegmentado,\n\tget_pts_redimencion,\n\tu_updateZiseCuadrado,\n\tu_getLinea,\n\tu_lineaSegmentado,\n\tu_moverLinea,\n\tget_pts_redimencion_linea,\n\tu_updateZiseLinea,\n\tu_getPlano,\n\tu_planoSegmentado,\n\tu_moverPlano,\n\tget_pts_redimencion_plano,\n\tu_updateZisePlano,\n};\n","const u_getLapiz = (array, x, y) => {\n\tlet resp = '';\n\tarray.forEach((lapiz) => {\n\t\tlet x1 = lapiz.x_min;\n\t\tlet y1 = lapiz.y_min;\n\t\tlet x2 = lapiz.x_may;\n\t\tlet y2 = lapiz.y_may;\n\t\tx1 < x && x < x2 && y1 < y && y < y2 ? (resp = lapiz) : '';\n\t});\n\treturn resp;\n};\n// CUADRADO SEGMENTADO:\nconst u_lapizSegmentado = (context, lapiz) => {\n\tcontext.strokeStyle = 'red'; // borde Color\n\tcontext.lineWidth = 1; // borde grosor de linea\n\tcontext.setLineDash([10, 4]); // lineas segmentadas\n\n\tcontext.beginPath();\n\tcontext.moveTo(lapiz.x_min, lapiz.y_min); // (x_ini, y_ini)\n\tcontext.lineTo(lapiz.x_may, lapiz.y_min); // (x_fin, y_ini)\n\tcontext.lineTo(lapiz.x_may, lapiz.y_may); // (x_fin, y_fin)\n\tcontext.lineTo(lapiz.x_min, lapiz.y_may); // (x_ini, y_fin)\n\tcontext.lineTo(lapiz.x_min, lapiz.y_min); // (x_ini, y_ini)\n\tcontext.stroke();\n\tcontext.closePath();\n};\n// MUEVE LAPIZ SELECT:\nconst u_moverLapiz = (lapiz, mouse) => {\n\tconst recorrido_x = mouse.pos.x - mouse.pos_prev.x;\n\tconst recorrido_y = mouse.pos.y - mouse.pos_prev.y;\n\tlapiz.historiaLinea.forEach((linea) => {\n\t\tlinea[0] = linea[0] + recorrido_x;\n\t\tlinea[1] = linea[1] + recorrido_y;\n\t\tlinea[2] = linea[2] + recorrido_x;\n\t\tlinea[3] = linea[3] + recorrido_y;\n\t});\n\tlapiz.x_min = lapiz.x_min + recorrido_x;\n\tlapiz.x_may = lapiz.x_may + recorrido_x;\n\tlapiz.y_min = lapiz.y_min + recorrido_y;\n\tlapiz.y_may = lapiz.y_may + recorrido_y;\n\treturn lapiz;\n};\n\nexport { u_getLapiz, u_lapizSegmentado, u_moverLapiz };\n","import { useContext, useEffect } from 'react';\n\n// CONTEXT:\nimport AppContextMover from '../context/AppContextMover';\nimport AppContextCanvas from '../context/AppContextCanvas';\nimport AppContextCuadrado from '../context/AppContextCuadrado';\nimport AppContextLinea from '../context/AppContextLinea';\nimport AppContextLapiz from '../context/AppContextLapiz';\nimport AppContextPlano from '../context/AppContextPlano';\n\n// utils:\nimport { utilsCuadricula_graficaCuadricula } from '../utils/UtilsCuadricula';\nimport { utilsCuadrado_graficaCuadradoHistoria } from '../utils/UtilsCuadrado';\nimport { utilsLinea_graficaLineaHistoria } from '../utils/UtilsLinea';\nimport { utilsLapiz_graficaLapizHistoria } from '../utils/UtilsLapiz';\nimport { uPlano_graficaCuadradoHistoriaConEjes } from '../utils/UtilsPlano';\nimport {\n\tu_getCuadrado,\n\tu_moverCuadrado,\n\tu_cuadradoSegmentado,\n\tget_pts_redimencion,\n\tu_updateZiseCuadrado,\n\tu_getLinea, // linea\n\tu_lineaSegmentado,\n\tu_moverLinea,\n\tget_pts_redimencion_linea,\n\tu_updateZiseLinea,\n\tu_getPlano,\n\tu_planoSegmentado,\n\tu_moverPlano,\n\tget_pts_redimencion_plano,\n\tu_updateZisePlano,\n} from '../utils/UtilsMover';\nimport {\n\tu_getLapiz,\n\tu_lapizSegmentado,\n\tu_moverLapiz,\n} from '../utils/UtilsMoverLapiz';\n\nconst PaintMover = (id_canvas) => {\n\t// useContext\n\tconst { stateMover } = useContext(AppContextMover);\n\tconst { stateCanvas } = useContext(AppContextCanvas);\n\tconst { stateCuadrado } = useContext(AppContextCuadrado);\n\tconst { stateLinea } = useContext(AppContextLinea);\n\tconst { stateLapiz } = useContext(AppContextLapiz);\n\tconst { statePlano } = useContext(AppContextPlano);\n\n\t// LOGICA:\n\tconst paint = () => {\n\t\tutilsCuadricula_graficaCuadricula(context, stateCanvas); // grafica cuadricula\n\t\tuPlano_graficaCuadradoHistoriaConEjes(context, statePlano.historiaPlano); // plano cartesiano\n\t\tutilsCuadrado_graficaCuadradoHistoria(\n\t\t\tcontext,\n\t\t\tstateCuadrado.historiaCuadrado\n\t\t);\n\t\tutilsLinea_graficaLineaHistoria(context, stateLinea.historiaLinea);\n\t\tutilsLapiz_graficaLapizHistoria(context, stateLapiz.historiaLapiz); // grafica historia de lapiz\n\t};\n\tlet canvas = '';\n\tlet context = '';\n\tlet cuadradoSelect = {};\n\tlet lineaSelect = {};\n\tlet lapizSelect = {};\n\tlet planoSelect = {};\n\n\tconst mouse = {\n\t\tpos: { x: 0, y: 0 },\n\t\tpos_prev: { x: 0, y: 0 },\n\t\tclick: false,\n\t\t// CUADRADO\n\t\tmover_cuadrado: false,\n\t\tseleccionar_cuadrado_pts: false,\n\t\tcuadrado_punto_mover: false,\n\t\tcuadrado_pto: '',\n\t\t// LINEA\n\t\tmover_linea: false,\n\t\tseleccionar_linea_pts: false,\n\t\tlinea_punto_mover: false,\n\t\tlinea_pto: '',\n\t\t// LAPIZ\n\t\tactive: true,\n\t\tmover_lapiz: false,\n\t\t// PLANO:\n\t\tplano_mover: false,\n\t\tplano_seleccionar_pts: false,\n\t\tplano_pto_mover: false,\n\t\tplano_pto: '',\n\t};\n\tconst canvasMoverDatos = {\n\t\ttop: 0,\n\t\tleft: 0,\n\t\twidth: 0,\n\t\theight: 0,\n\t};\n\tconst captura_Pos_Posprev = (e) => {\n\t\tconst x = e.clientX;\n\t\tconst y = e.clientY;\n\t\tconst x_real = x - canvasMoverDatos.left;\n\t\tconst y_real = y - canvasMoverDatos.top;\n\t\tmouse.pos_prev.x = mouse.pos.x;\n\t\tmouse.pos_prev.y = mouse.pos.y;\n\t\tmouse.pos.x = x_real;\n\t\tmouse.pos.y = y_real;\n\t};\n\tconst busca_cuadrado_ptoClick = (x, y, array) => {\n\t\tlet resp = '';\n\t\tif (\n\t\t\tarray[0].x1 < x &&\n\t\t\tx < array[0].x2 &&\n\t\t\tarray[0].y1 < y &&\n\t\t\ty < array[0].y2\n\t\t)\n\t\t\tresp = 'top';\n\t\telse if (\n\t\t\tarray[1].x1 < x &&\n\t\t\tx < array[1].x2 &&\n\t\t\tarray[1].y1 < y &&\n\t\t\ty < array[1].y2\n\t\t)\n\t\t\tresp = 'right';\n\t\telse if (\n\t\t\tarray[2].x1 < x &&\n\t\t\tx < array[2].x2 &&\n\t\t\tarray[2].y1 < y &&\n\t\t\ty < array[2].y2\n\t\t)\n\t\t\tresp = 'button';\n\t\telse if (\n\t\t\tarray[3].x1 < x &&\n\t\t\tx < array[3].x2 &&\n\t\t\tarray[3].y1 < y &&\n\t\t\ty < array[3].y2\n\t\t)\n\t\t\tresp = 'lefth';\n\t\treturn resp;\n\t};\n\tconst busca_linea_ptoClick = (x, y, array) => {\n\t\tlet resp = '';\n\t\tif (\n\t\t\tarray[0].x1 < x &&\n\t\t\tx < array[0].x2 &&\n\t\t\tarray[0].y1 < y &&\n\t\t\ty < array[0].y2\n\t\t)\n\t\t\tresp = 'ini';\n\t\telse if (\n\t\t\tarray[1].x1 < x &&\n\t\t\tx < array[1].x2 &&\n\t\t\tarray[1].y1 < y &&\n\t\t\ty < array[1].y2\n\t\t)\n\t\t\tresp = 'fin';\n\t\treturn resp;\n\t};\n\tconst clickSobreLapiz = () => {\n\t\tlapizSelect || cuadradoSelect || lineaSelect ? paint() : '';\n\t\tlapizSelect = u_getLapiz(\n\t\t\tstateLapiz.historiaLapiz,\n\t\t\tmouse.pos.x,\n\t\t\tmouse.pos.y\n\t\t);\n\t\tif (lapizSelect) {\n\t\t\tu_lapizSegmentado(context, lapizSelect);\n\t\t\tmouse.mover_lapiz = true;\n\t\t}\n\t};\n\t// 1:\n\tconst mouseDownMover = (e) => {\n\t\tmouse.click = true;\n\t\tcaptura_Pos_Posprev(e);\n\n\t\t// LAPIZ:\n\t\tclickSobreLapiz();\n\t\tif (!lapizSelect) {\n\t\t\t// no se hizo click sobre el lapiz.\n\t\t\t// LINEA:\n\t\t\tif (mouse.seleccionar_linea_pts) {\n\t\t\t\t// selecciono previamente una linea\n\t\t\t\tlet arrayPts = get_pts_redimencion_linea(lineaSelect);\n\t\t\t\tmouse.linea_pto = busca_linea_ptoClick(\n\t\t\t\t\tmouse.pos.x,\n\t\t\t\t\tmouse.pos.y,\n\t\t\t\t\tarrayPts\n\t\t\t\t);\n\t\t\t\tif (mouse.linea_pto != '') {\n\t\t\t\t\t// hizo click sobre uno de los puntos de la linea\n\t\t\t\t\tmouse.linea_punto_mover = true;\n\t\t\t\t\tmouse.mover_linea = false;\n\t\t\t\t} else {\n\t\t\t\t\t// no hizo click sobre los puntos de la linea\n\t\t\t\t\tmouse.linea_punto_mover = false;\n\t\t\t\t\tmouse.mover_linea = false;\n\t\t\t\t}\n\t\t\t}\n\t\t\tif (!mouse.linea_punto_mover) {\n\t\t\t\t// no tiene seleccionado una linea previamente\n\t\t\t\tlineaSelect = u_getLinea(\n\t\t\t\t\tstateLinea.historiaLinea,\n\t\t\t\t\tmouse.pos.x,\n\t\t\t\t\tmouse.pos.y\n\t\t\t\t);\n\t\t\t\tif (lineaSelect) {\n\t\t\t\t\t// selecciono una linea\n\t\t\t\t\tmouse.seleccionar_linea_pts = true;\n\t\t\t\t\tmouse.mover_linea = true;\n\t\t\t\t\tmouse.linea_punto_mover = false;\n\t\t\t\t\tu_lineaSegmentado(context, lineaSelect);\n\t\t\t\t} else {\n\t\t\t\t\t// no selecciono una linea\n\t\t\t\t\tmouse.seleccionar_linea_pts = false;\n\t\t\t\t\tmouse.mover_linea = false;\n\t\t\t\t\tmouse.linea_punto_mover = false;\n\t\t\t\t\t//paint();\n\t\t\t\t}\n\t\t\t}\n\t\t\tif (!lineaSelect) {\n\t\t\t\t// no hizo click sobre una linea\n\t\t\t\t// CUADRADO:\n\t\t\t\tif (mouse.seleccionar_cuadrado_pts) {\n\t\t\t\t\t// ya tiene seleccionado un cuadrado previamente\n\t\t\t\t\tlet arrayPts = get_pts_redimencion(cuadradoSelect);\n\t\t\t\t\tmouse.cuadrado_pto = busca_cuadrado_ptoClick(\n\t\t\t\t\t\tmouse.pos.x,\n\t\t\t\t\t\tmouse.pos.y,\n\t\t\t\t\t\tarrayPts\n\t\t\t\t\t);\n\t\t\t\t\tif (mouse.cuadrado_pto != '') {\n\t\t\t\t\t\tconsole.log(mouse.cuadrado_pto);\n\t\t\t\t\t\tmouse.cuadrado_punto_mover = true; // se movera el lado seleccionado\n\t\t\t\t\t\tmouse.mover_cuadrado = false; // no se movera el cuadrado\n\t\t\t\t\t} else {\n\t\t\t\t\t\tmouse.cuadrado_punto_mover = false; // move_size\n\t\t\t\t\t\tmouse.mover_cuadrado = false;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\tif (!mouse.cuadrado_punto_mover) {\n\t\t\t\t\t// no tiene seleccionando un cuadrado aun\n\t\t\t\t\tcuadradoSelect = u_getCuadrado(\n\t\t\t\t\t\tstateCuadrado.historiaCuadrado,\n\t\t\t\t\t\tmouse.pos.x,\n\t\t\t\t\t\tmouse.pos.y\n\t\t\t\t\t);\n\t\t\t\t\tif (cuadradoSelect) {\n\t\t\t\t\t\t// encontro un cuadrado donde hizo click\n\t\t\t\t\t\tmouse.seleccionar_cuadrado_pts = true;\n\t\t\t\t\t\tmouse.mover_cuadrado = true;\n\t\t\t\t\t\tmouse.cuadrado_punto_mover = false;\n\t\t\t\t\t\tu_cuadradoSegmentado(context, cuadradoSelect);\n\t\t\t\t\t} else {\n\t\t\t\t\t\t// no encontro un cuadrado donde hizo click\n\t\t\t\t\t\tmouse.seleccionar_cuadrado_pts = false;\n\t\t\t\t\t\tmouse.mover_cuadrado = false;\n\t\t\t\t\t\tmouse.cuadrado_punto_mover = false;\n\t\t\t\t\t\t//paint();\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\tif (!cuadradoSelect) {\n\t\t\t\t\t// no hizo click sobre un cuadrado.\n\t\t\t\t\t// PLANO:\n\t\t\t\t\tif (mouse.plano_seleccionar_pts) {\n\t\t\t\t\t\tconsole.log('selection plano preview');\n\t\t\t\t\t\t// ya tiene seleccionado un plano previamente\n\t\t\t\t\t\tlet arrayPts = get_pts_redimencion_plano(planoSelect);\n\t\t\t\t\t\tmouse.plano_pto = busca_cuadrado_ptoClick(\n\t\t\t\t\t\t\tmouse.pos.x,\n\t\t\t\t\t\t\tmouse.pos.y,\n\t\t\t\t\t\t\tarrayPts\n\t\t\t\t\t\t);\n\t\t\t\t\t\tif (mouse.plano_pto != '') {\n\t\t\t\t\t\t\tconsole.log(mouse.plano_pto);\n\t\t\t\t\t\t\tmouse.plano_pto_mover = true; // se movera el lado seleccionado\n\t\t\t\t\t\t\tmouse.plano_mover = false; // no se movera el cuadrado\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\tmouse.plano_pto_mover = false; // move_size\n\t\t\t\t\t\t\tmouse.plano_mover = false;\n\t\t\t\t\t\t\tmouse.plano_seleccionar_pts = false;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\tif (!mouse.plano_seleccionar_pts) {\n\t\t\t\t\t\t// no tiene seleccionado un plano aun\n\t\t\t\t\t\tplanoSelect = u_getPlano(\n\t\t\t\t\t\t\tstatePlano.historiaPlano,\n\t\t\t\t\t\t\tmouse.pos.x,\n\t\t\t\t\t\t\tmouse.pos.y\n\t\t\t\t\t\t);\n\t\t\t\t\t\tif (planoSelect) {\n\t\t\t\t\t\t\tconsole.log('selection plano');\n\t\t\t\t\t\t\t// hizo click sobre un plano\n\t\t\t\t\t\t\tmouse.plano_seleccionar_pts = true;\n\t\t\t\t\t\t\tmouse.plano_mover = true;\n\t\t\t\t\t\t\tmouse.plano_pto_mover = false;\n\t\t\t\t\t\t\tu_planoSegmentado(context, planoSelect);\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\tif (!lapizSelect && !lineaSelect && !cuadradoSelect && !planoSelect) {\n\t\t\tconsole.log('paint');\n\t\t\tpaint();\n\t\t}\n\t};\n\t// 2:\n\tconst mouseMoveMover = (e) => {\n\t\tif (mouse.click) {\n\t\t\tif (mouse.mover_cuadrado) {\n\t\t\t\t// CUADRADO:\n\t\t\t\tcaptura_Pos_Posprev(e);\n\t\t\t\tcuadradoSelect = u_moverCuadrado(cuadradoSelect, mouse);\n\t\t\t\tpaint();\n\t\t\t\tu_cuadradoSegmentado(context, cuadradoSelect);\n\t\t\t} else {\n\t\t\t\t// CUADRADO PTOS:\n\t\t\t\tif (mouse.cuadrado_punto_mover) {\n\t\t\t\t\tcaptura_Pos_Posprev(e);\n\t\t\t\t\tcuadradoSelect = u_updateZiseCuadrado(cuadradoSelect, mouse);\n\t\t\t\t\tpaint();\n\t\t\t\t\tu_cuadradoSegmentado(context, cuadradoSelect);\n\t\t\t\t} else {\n\t\t\t\t\t// LINEA:\n\t\t\t\t\tif (mouse.mover_linea) {\n\t\t\t\t\t\tcaptura_Pos_Posprev(e);\n\t\t\t\t\t\tlineaSelect = u_moverLinea(lineaSelect, mouse);\n\t\t\t\t\t\tpaint();\n\t\t\t\t\t\tu_lineaSegmentado(context, lineaSelect);\n\t\t\t\t\t} else {\n\t\t\t\t\t\t// LINEA PTOS:\n\t\t\t\t\t\tif (mouse.linea_punto_mover) {\n\t\t\t\t\t\t\tcaptura_Pos_Posprev(e);\n\t\t\t\t\t\t\tlineaSelect = u_updateZiseLinea(lineaSelect, mouse);\n\t\t\t\t\t\t\tpaint();\n\t\t\t\t\t\t\tu_lineaSegmentado(context, lineaSelect);\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\t// LAPIZ:\n\t\t\t\t\t\t\tif (mouse.mover_lapiz) {\n\t\t\t\t\t\t\t\tcaptura_Pos_Posprev(e);\n\t\t\t\t\t\t\t\tlapizSelect = u_moverLapiz(lapizSelect, mouse);\n\t\t\t\t\t\t\t\tpaint();\n\t\t\t\t\t\t\t\tu_lapizSegmentado(context, lapizSelect);\n\t\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\t\t// PLANO:\n\t\t\t\t\t\t\t\tif (mouse.plano_mover) {\n\t\t\t\t\t\t\t\t\tcaptura_Pos_Posprev(e);\n\t\t\t\t\t\t\t\t\tplanoSelect = u_moverPlano(planoSelect, mouse);\n\t\t\t\t\t\t\t\t\tpaint();\n\t\t\t\t\t\t\t\t\tu_planoSegmentado(context, planoSelect);\n\t\t\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\t\t\t// PLANO PTOS:\n\t\t\t\t\t\t\t\t\tif (mouse.plano_pto_mover) {\n\t\t\t\t\t\t\t\t\t\tcaptura_Pos_Posprev(e);\n\t\t\t\t\t\t\t\t\t\tplanoSelect = u_updateZisePlano(planoSelect, mouse);\n\t\t\t\t\t\t\t\t\t\tpaint();\n\t\t\t\t\t\t\t\t\t\tu_planoSegmentado(context, planoSelect);\n\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t};\n\t// 3:\n\tconst mouseUpMover = (e) => {\n\t\tif (mouse.cuadrado_punto_mover) {\n\t\t\tif (cuadradoSelect.x_fin < cuadradoSelect.x_ini) {\n\t\t\t\tlet aux = cuadradoSelect.x_fin;\n\t\t\t\tcuadradoSelect.x_fin = cuadradoSelect.x_ini;\n\t\t\t\tcuadradoSelect.x_ini = aux;\n\t\t\t}\n\t\t\tif (cuadradoSelect.y_fin < cuadradoSelect.y_ini) {\n\t\t\t\tlet aux = cuadradoSelect.y_fin;\n\t\t\t\tcuadradoSelect.y_fin = cuadradoSelect.y_ini;\n\t\t\t\tcuadradoSelect.y_ini = aux;\n\t\t\t}\n\t\t}\n\t\tmouse.click = false;\n\t\t// CUADRADO:\n\t\tmouse.mover_cuadrado = false;\n\t\tmouse.cuadrado_punto_mover = false;\n\t\tmouse.cuadrado_pto = '';\n\t\t// LINEA:\n\t\tmouse.mover_linea = false;\n\t\tmouse.linea_punto_mover = false;\n\t\tmouse.linea_pto = '';\n\t\t// LAPIZ:\n\t\tmouse.mover_lapiz = false;\n\t\t// PLANO:\n\t\tmouse.plano_mover = false;\n\t\tmouse.plano_pto_mover = false;\n\t\tmouse.plano_pto = '';\n\t};\n\tconst update_canvasMoverDatos = () => {\n\t\tcanvasMoverDatos.top = canvas.getBoundingClientRect().top;\n\t\tcanvasMoverDatos.left = canvas.getBoundingClientRect().left;\n\t\tcanvasMoverDatos.width = canvas.getBoundingClientRect().width;\n\t\tcanvasMoverDatos.height = canvas.getBoundingClientRect().height;\n\t};\n\t// LOGICA END.\n\n\t// useEffect:\n\tuseEffect(() => {\n\t\tcanvas = document.getElementById(id_canvas);\n\t\tcontext = canvas.getContext('2d');\n\t\tif (stateMover.active) {\n\t\t\tupdate_canvasMoverDatos();\n\t\t\tcanvas.addEventListener('mousedown', mouseDownMover);\n\t\t\tcanvas.addEventListener('mousemove', mouseMoveMover);\n\t\t\tcanvas.addEventListener('mouseup', mouseUpMover);\n\t\t}\n\t\treturn () => {\n\t\t\tcanvas.removeEventListener('mousedown', mouseDownMover);\n\t\t\tcanvas.removeEventListener('mousemove', mouseMoveMover);\n\t\t\tcanvas.removeEventListener('mouseup', mouseUpMover);\n\t\t};\n\t}, [stateCuadrado, stateLinea]);\n\n\t// RENDER:\n\t// return console.log('paint mover');\n};\n\nexport default PaintMover;\n","import React, { useEffect, useContext } from 'react';\n\n// CONTEXT:\nimport AppContextCanvas from '../context/AppContextCanvas';\nimport AppContextCuadrado from '../context/AppContextCuadrado';\nimport AppContextLinea from '../context/AppContextLinea';\nimport AppContextLapiz from '../context/AppContextLapiz';\nimport AppContextPlano from '../context/AppContextPlano';\n\n// utils:\nimport { utilsCuadricula_graficaCuadricula } from '../utils/UtilsCuadricula';\nimport { utilsCuadrado_graficaCuadradoHistoria } from '../utils/UtilsCuadrado';\nimport { utilsLinea_graficaLineaHistoria } from '../utils/UtilsLinea';\nimport { utilsLapiz_graficaLapizHistoria } from '../utils/UtilsLapiz';\n\nimport {\n\tuPlano_graficaCuadrado,\n\tuPlano_graficaCuadradoConEjes,\n\tuPlano_graficaCuadradoHistoria,\n} from '../utils/UtilsPlano';\n\nconst PaintPlano = (id_canvas) => {\n\t// useContext:\n\tconst { stateCanvas } = useContext(AppContextCanvas);\n\tconst { stateCuadrado } = useContext(AppContextCuadrado);\n\tconst { stateLinea } = useContext(AppContextLinea);\n\tconst { stateLapiz } = useContext(AppContextLapiz);\n\tconst { statePlano, add_plano_en_historia } = useContext(AppContextPlano);\n\n\t// LOGICA:\n\tlet canvas = '';\n\tlet context = '';\n\tconst canvasPlanoDatos = {\n\t\ttop: 0,\n\t\tleft: 0,\n\t\twidth: 0,\n\t\theight: 0,\n\t};\n\tconst update_canvasPlanoDatos = () => {\n\t\tcanvasPlanoDatos.top = canvas.getBoundingClientRect().top;\n\t\tcanvasPlanoDatos.left = canvas.getBoundingClientRect().left;\n\t\tcanvasPlanoDatos.width = canvas.getBoundingClientRect().width;\n\t\tcanvasPlanoDatos.height = canvas.getBoundingClientRect().height;\n\t};\n\tconst paint = () => {\n\t\tutilsCuadricula_graficaCuadricula(context, stateCanvas); // grafica cuadricula\n\t\tuPlano_graficaCuadradoHistoria(context, statePlano.historiaPlano);\n\t\tutilsCuadrado_graficaCuadradoHistoria(\n\t\t\tcontext,\n\t\t\tstateCuadrado.historiaCuadrado\n\t\t);\n\t\tutilsLinea_graficaLineaHistoria(context, stateLinea.historiaLinea);\n\t\tutilsLapiz_graficaLapizHistoria(context, stateLapiz.historiaLapiz); // grafica historia de lapiz\n\t};\n\tconst mouse = {\n\t\tclick: false,\n\t\tmove: false,\n\t\tprimerClick: false,\n\t\tpos: { x: 0, y: 0 },\n\t\tpos_prev: { x: 0, y: 0 },\n\t};\n\tconst mouseReinicia = () => {\n\t\tmouse.click = false;\n\t\tmouse.move = false;\n\t\tmouse.primerClick = false;\n\t\tmouse.pos.x = 0;\n\t\tmouse.pos_prev.x = 0;\n\t\tmouse.pos.y = 0;\n\t\tmouse.pos_prev.y = 0;\n\t};\n\tconst plano = {\n\t\tid: 0,\n\t\tbordeEstado: true,\n\t\tbordeGrosor: 2,\n\t\tbordeColor: statePlano.color_cuadricula,\n\t\tfondoEstado: true,\n\t\tfondoColor: 'white',\n\t\twidth_cuadricula: statePlano.width_cuadricula,\n\t\tx_ini: 0,\n\t\ty_ini: 0,\n\t\tx_fin: 0,\n\t\ty_fin: 0,\n\n\t\tx_min: statePlano.x_min,\n\t\ty_max: statePlano.y_max,\n\t\tsalto: statePlano.salto,\n\t};\n\tconst captura_Pos_Posprev = (e) => {\n\t\tconst x = e.clientX;\n\t\tconst y = e.clientY;\n\t\tconst x_real = x - canvasPlanoDatos.left;\n\t\tconst y_real = y - canvasPlanoDatos.top;\n\t\tmouse.pos_prev.x = mouse.pos.x;\n\t\tmouse.pos_prev.y = mouse.pos.y;\n\t\tmouse.pos.x = x_real;\n\t\tmouse.pos.y = y_real;\n\n\t\tif (mouse.primerClick) {\n\t\t\tplano.x_ini = mouse.pos_prev.x;\n\t\t\tplano.y_ini = mouse.pos_prev.y;\n\t\t\tmouse.primerClick = false;\n\t\t}\n\t\tplano.x_fin = mouse.pos.x;\n\t\tplano.y_fin = mouse.pos.y;\n\t};\n\t// 1:\n\tconst mouseDownPlano = (e) => {\n\t\tmouse.click = true;\n\t\tcaptura_Pos_Posprev(e);\n\t};\n\t// 2:\n\tconst mouseMovePlano = (e) => {\n\t\tif (mouse.click) {\n\t\t\tif (!mouse.move) {\n\t\t\t\tmouse.primerClick = true;\n\t\t\t\tmouse.move = true;\n\t\t\t}\n\t\t\tcaptura_Pos_Posprev(e);\n\t\t\tpaint();\n\t\t\tuPlano_graficaCuadrado(context, plano);\n\t\t}\n\t};\n\t// 3:\n\tconst mouseUpPlano = () => {\n\t\tif (mouse.pos_prev.x != 0 && mouse.pos_prev.y != 0) {\n\t\t\t//paint();\n\t\t\tuPlano_graficaCuadradoConEjes(context, plano);\n\t\t\tadd_plano_en_historia(plano);\n\t\t}\n\t\tmouseReinicia();\n\t};\n\t// LOGICA END.\n\n\t// EFFECT:\n\tuseEffect(() => {\n\t\tcanvas = document.getElementById(id_canvas);\n\t\tcontext = canvas.getContext('2d');\n\t\tif (statePlano.active) {\n\t\t\tupdate_canvasPlanoDatos();\n\t\t\tcanvas.addEventListener('mousedown', mouseDownPlano);\n\t\t\tcanvas.addEventListener('mousemove', mouseMovePlano);\n\t\t\tcanvas.addEventListener('mouseup', mouseUpPlano);\n\t\t}\n\t\treturn () => {\n\t\t\tcanvas.removeEventListener('mousedown', mouseDownPlano);\n\t\t\tcanvas.removeEventListener('mousemove', mouseMovePlano);\n\t\t\tcanvas.removeEventListener('mouseup', mouseUpPlano);\n\t\t};\n\t}, [statePlano]);\n\tuseEffect(() => {\n\t\t//console.log('hola');\n\t}, []);\n};\n\nexport default PaintPlano;\n","import React, { useState, useEffect, useContext } from 'react';\n\n// context:\nimport AppContextLapiz from '../context/AppContextLapiz';\nimport AppContextCanvas from '../context/AppContextCanvas';\n\n// styles:\nimport '../styles/Canvas.scss';\n\n// components:\nimport PaintMover from './PaintMover';\nimport PainLapiz from '../components/PaintLapiz';\nimport PaintBorrador from './PaintBorrador';\nimport PaintLinea from './PaintLinea';\nimport PaintCuadrado from './PaintCuadrado';\nimport PaintCuadricula from './PaintCuadricula';\nimport PaintPlano from './PaintPlano';\n\nconst Canvas = () => {\n\t// useContext:\n\tconst { update_width_height } = useContext(AppContextCanvas);\n\n\t// useState:\n\tconst [canvasWidth, setCanvasWidth] = useState(window.innerWidth - 75);\n\tconst [canvasHeight, setCanvasHeight] = useState(window.innerHeight - 90);\n\n\t// LOGICA:\n\t// update_width_height;\n\n\tPaintCuadricula('canvas-1');\n\tPaintMover('canvas-1');\n\tPainLapiz('canvas-1');\n\tPaintBorrador('canvas-1');\n\tPaintCuadrado('canvas-1');\n\tPaintLinea('canvas-1');\n\tPaintPlano('canvas-1');\n\n\tconst updateCanvasWidth = () => setCanvasWidth(window.innerWidth - 75);\n\tconst updateCanvasHeight = () => setCanvasHeight(window.innerHeight - 90);\n\t// LOGICA END.\n\n\t// useEfect:\n\tuseEffect(() => {\n\t\t// redimencionamos el canvas la primera vez:\n\t\twindow.addEventListener('resize', updateCanvasWidth);\n\t\twindow.addEventListener('resize', updateCanvasHeight);\n\n\t\treturn () => {\n\t\t\twindow.removeEventListener('resize', updateCanvasWidth);\n\t\t\twindow.removeEventListener('resize', updateCanvasHeight);\n\t\t};\n\t}, []);\n\n\tuseEffect(() => {\n\t\tupdate_width_height(canvasWidth, canvasHeight);\n\t}, [canvasWidth, canvasHeight]);\n\n\treturn (\n\t\t<canvas\n\t\t\tclassName=\"canvas\"\n\t\t\twidth={canvasWidth}\n\t\t\theight={canvasHeight}\n\t\t\tid=\"canvas-1\"\n\t\t></canvas>\n\t);\n};\n\nexport default Canvas;\n","import { useEffect, useContext } from 'react';\n\n// CONTEXT:\nimport AppContextCanvas from '../context/AppContextCanvas';\nimport AppContextCuadrado from '../context/AppContextCuadrado';\nimport AppContextLinea from '../context/AppContextLinea';\nimport AppContextLapiz from '../context/AppContextLapiz';\nimport AppContextPlano from '../context/AppContextPlano';\n\n// utils:\nimport { utilsCuadricula_graficaCuadricula } from '../utils/UtilsCuadricula';\nimport { utilsCuadrado_graficaCuadradoHistoria } from '../utils/UtilsCuadrado';\nimport { utilsLinea_graficaLineaHistoria } from '../utils/UtilsLinea';\nimport { utilsLapiz_graficaLapizHistoria } from '../utils/UtilsLapiz';\nimport { uPlano_graficaCuadradoHistoriaConEjes } from '../utils/UtilsPlano';\n\nconst PaintCuadricula = (canvasId) => {\n\t// useContext:\n\tconst { stateCanvas } = useContext(AppContextCanvas);\n\tconst { stateCuadrado } = useContext(AppContextCuadrado);\n\tconst { stateLinea } = useContext(AppContextLinea);\n\tconst { stateLapiz } = useContext(AppContextLapiz);\n\tconst { statePlano } = useContext(AppContextPlano);\n\n\t// LOGICA:\n\tlet context = '';\n\tconst paint = () => {\n\t\tutilsCuadricula_graficaCuadricula(context, stateCanvas);\n\t\tuPlano_graficaCuadradoHistoriaConEjes(context, statePlano.historiaPlano);\n\t\tutilsCuadrado_graficaCuadradoHistoria(\n\t\t\tcontext,\n\t\t\tstateCuadrado.historiaCuadrado\n\t\t);\n\t\tutilsLinea_graficaLineaHistoria(context, stateLinea.historiaLinea);\n\t\tutilsLapiz_graficaLapizHistoria(context, stateLapiz.historiaLapiz);\n\t};\n\t// LOGICA END.\n\n\t// useEffect:\n\tuseEffect(() => {\n\t\tcontext = document.getElementById(canvasId).getContext('2d');\n\t\tpaint();\n\t}, [\n\t\tstateCanvas.width,\n\t\tstateCanvas.height,\n\t\tstateCanvas.tipoCuadricula,\n\t\tstateCanvas.cuadriculaWidth,\n\t]);\n};\n//const saludar = () => console.log('hola daniel');\n\nexport default PaintCuadricula;\n","import React, { useEffect, useContext } from 'react';\n\n// useContext:\nimport AppContextLapiz from '../context/AppContextLapiz';\n\nconst PaintLapiz = (id_canvas) => {\n\t// useContext:\n\tconst { stateLapiz, add_historiaLapiz } = useContext(AppContextLapiz);\n\n\t// LOGICA:\n\tlet canvas = '';\n\tlet context = '';\n\tconst lapizNew = {\n\t\tid: 0,\n\t\tgrosor: stateLapiz.grosor,\n\t\tcolor: stateLapiz.color,\n\t\thistoriaLinea: [],\n\t\tx_min: 2000,\n\t\tx_may: 0,\n\t\ty_min: 2000,\n\t\ty_may: 0,\n\t};\n\tconst lapizLinea = {\n\t\tgrosor: stateLapiz.grosor,\n\t\tcolor: stateLapiz.color,\n\t\tx_ini: 0,\n\t\ty_ini: 0,\n\t\tx_fin: 0,\n\t\ty_fin: 0,\n\t};\n\tconst mouse = {\n\t\tclick: false,\n\t\tmove: false,\n\t\tpos: { x: 0, y: 0 },\n\t\tpos_prev: { x: 0, y: 0 },\n\t};\n\tconst canvasLapizDatos = {\n\t\ttop: 0,\n\t\tleft: 0,\n\t\twidth: 0,\n\t\theight: 0,\n\t};\n\tconst captura_Pos_Posprev = (e) => {\n\t\tconst x = e.clientX;\n\t\tconst y = e.clientY;\n\n\t\tconst x_real = x - canvasLapizDatos.left;\n\t\tconst y_real = y - canvasLapizDatos.top;\n\n\t\tmouse.pos_prev.x = mouse.pos.x;\n\t\tmouse.pos_prev.y = mouse.pos.y;\n\t\tmouse.pos.x = x_real;\n\t\tmouse.pos.y = y_real;\n\n\t\tlapizLinea.x_ini = mouse.pos_prev.x;\n\t\tlapizLinea.y_ini = mouse.pos_prev.y;\n\t\tlapizLinea.x_fin = mouse.pos.x;\n\t\tlapizLinea.y_fin = mouse.pos.y;\n\t};\n\tconst graficaLapiz = (lapizNew) => {\n\t\tif (lapizNew.historiaLapiz.length > 0) {\n\t\t\tcontext.strokeStyle = lapizNew.color;\n\t\t\tcontext.lineWidth = lapizNew.grosor;\n\t\t\tlapizNew.historiaLapiz.map((elem) => {\n\t\t\t\tcontext.beginPath();\n\t\t\t\tcontext.moveTo(elem[0], elem[1]);\n\t\t\t\tcontext.lineTo(elem[2], elem[3]);\n\t\t\t\tcontext.stroke();\n\t\t\t\tcontext.closePath();\n\t\t\t});\n\t\t}\n\t};\n\n\tconst graficaLinea = (linea) => {\n\t\tcontext.strokeStyle = linea.color;\n\t\tcontext.lineWidth = linea.grosor;\n\t\tcontext.setLineDash([0, 0]);\n\t\tcontext.beginPath();\n\t\tcontext.moveTo(linea.x_ini, linea.y_ini);\n\t\tcontext.lineTo(linea.x_fin, linea.y_fin);\n\t\tcontext.stroke();\n\t\tcontext.closePath();\n\t\t// busca cotas minimas X:\n\t\tlinea.x_ini < lapizNew.x_min ? (lapizNew.x_min = linea.x_ini) : '';\n\t\tlinea.x_fin < lapizNew.x_min ? (lapizNew.x_min = linea.x_fin) : '';\n\t\t// busca cotas maximas X:\n\t\tlinea.x_ini > lapizNew.x_may ? (lapizNew.x_may = linea.x_ini) : '';\n\t\tlinea.x_fin > lapizNew.x_may ? (lapizNew.x_may = linea.x_fin) : '';\n\t\t// busca cotas minimas Y:\n\t\tlinea.y_ini < lapizNew.y_min ? (lapizNew.y_min = linea.y_ini) : '';\n\t\tlinea.y_fin < lapizNew.y_min ? (lapizNew.y_min = linea.y_fin) : '';\n\t\t// busca cotas maximas Y:\n\t\tlinea.y_ini > lapizNew.y_may ? (lapizNew.y_may = linea.y_ini) : '';\n\t\tlinea.y_fin > lapizNew.y_may ? (lapizNew.y_may = linea.y_fin) : '';\n\t};\n\tconst mouseDownLapiz = (e) => {\n\t\tstateLapiz.grosor > 0\n\t\t\t? (mouse.click = true)\n\t\t\t: console.log('el grosor es 0.');\n\t\tcaptura_Pos_Posprev(e);\n\t};\n\tconst mouseMoveLapiz = (e) => {\n\t\tif (mouse.click) {\n\t\t\tcaptura_Pos_Posprev(e);\n\t\t\tgraficaLinea(lapizLinea);\n\t\t\tlapizNew.historiaLinea.push([\n\t\t\t\tlapizLinea.x_ini,\n\t\t\t\tlapizLinea.y_ini,\n\t\t\t\tlapizLinea.x_fin,\n\t\t\t\tlapizLinea.y_fin,\n\t\t\t]);\n\t\t}\n\t};\n\tconst mouseUpLapiz = (e) => {\n\t\tif (mouse.click) {\n\t\t\tcaptura_Pos_Posprev(e);\n\t\t\tgraficaLinea(lapizLinea);\n\t\t\tlapizNew.historiaLinea.push([\n\t\t\t\tlapizLinea.x_ini,\n\t\t\t\tlapizLinea.y_ini,\n\t\t\t\tlapizLinea.x_fin,\n\t\t\t\tlapizLinea.y_fin,\n\t\t\t]);\n\t\t\tlapizNew.id = stateLapiz.historiaLapiz.length;\n\t\t\tadd_historiaLapiz(lapizNew);\n\t\t}\n\t\tmouse.click = false;\n\t};\n\tconst update_canvasLapizDatos = () => {\n\t\tcanvasLapizDatos.top = canvas.getBoundingClientRect().top;\n\t\tcanvasLapizDatos.left = canvas.getBoundingClientRect().left;\n\t\tcanvasLapizDatos.width = canvas.getBoundingClientRect().width;\n\t\tcanvasLapizDatos.height = canvas.getBoundingClientRect().height;\n\t};\n\t// LOGICA END.\n\n\t// useEffect:\n\tuseEffect(() => {\n\t\tcanvas = document.getElementById(id_canvas);\n\t\tcontext = canvas.getContext('2d');\n\n\t\tif (stateLapiz.active) {\n\t\t\tupdate_canvasLapizDatos();\n\t\t\tcanvas.addEventListener('mousedown', mouseDownLapiz);\n\t\t\tcanvas.addEventListener('mousemove', mouseMoveLapiz);\n\t\t\tcanvas.addEventListener('mouseup', mouseUpLapiz);\n\t\t}\n\t\treturn () => {\n\t\t\t//canvasLapiz.removeEventListener('click', saludar);\n\t\t\tcanvas.removeEventListener('mousedown', mouseDownLapiz);\n\t\t\tcanvas.removeEventListener('mousemove', mouseMoveLapiz);\n\t\t\tcanvas.removeEventListener('mouseup', mouseUpLapiz);\n\t\t};\n\t}, [stateLapiz]);\n\n\t// return console.log('hola soy lapiz');\n};\n\nexport default PaintLapiz;\n","import React, { useEffect, useContext } from 'react';\n\n// CONTEXT:\nimport AppContextBorrador from '../context/AppContextBorrador';\n\nconst PaintBorrador = (id_canvas) => {\n\t// useContext:\n\tconst { stateBorrador } = useContext(AppContextBorrador);\n\n\t// LOGICA:\n\tconst mouse = {\n\t\tclick: false,\n\t\tmove: false,\n\t\tpos: { x: 0, y: 0 },\n\t\tpos_prev: { x: 0, y: 0 },\n\t};\n\tconst saludar = () => {\n\t\talert('hola');\n\t\tconsole.log('alert');\n\t};\n\tconst canvasBorradorDatos = {\n\t\ttop: 0,\n\t\tleft: 0,\n\t\twidth: 0,\n\t\theight: 0,\n\t};\n\tconst click = {\n\t\tx: 0,\n\t\ty: 0,\n\t};\n\tconst clickReal = {\n\t\tx: 0,\n\t\ty: 0,\n\t};\n\tconst capturaPosPosprev = (e) => {\n\t\tclick.x = e.clientX;\n\t\tclick.y = e.clientY;\n\n\t\tclickReal.x = click.x - canvasBorradorDatos.left;\n\t\tclickReal.y = click.y - canvasBorradorDatos.top;\n\n\t\tmouse.pos_prev.x = mouse.pos.x;\n\t\tmouse.pos_prev.y = mouse.pos.y;\n\t\tmouse.pos.x = clickReal.x;\n\t\tmouse.pos.y = clickReal.y;\n\t};\n\tconst graficaBorrador = () => {\n\t\t// historiaLinea.push([\n\t\t// \tmouse.pos_prev.x,\n\t\t// \tmouse.pos_prev.y,\n\t\t// \tmouse.pos.x,\n\t\t// \tmouse.pos.y,\n\t\t// ]);\n\t\tconst context = document.getElementById(id_canvas).getContext('2d');\n\t\tcontext.beginPath();\n\t\tcontext.moveTo(mouse.pos_prev.x, mouse.pos_prev.y);\n\t\tcontext.lineTo(mouse.pos.x, mouse.pos.y);\n\t\tcontext.strokeStyle = stateBorrador.color;\n\t\tcontext.lineWidth = stateBorrador.grosor;\n\t\tcontext.stroke();\n\t\tcontext.closePath();\n\t};\n\tconst mouseDownBorrador = (e) => {\n\t\t// console.log('mousedown borrador');\n\t\tmouse.click = true;\n\t\tcapturaPosPosprev(e);\n\t};\n\tconst mouseMoveBorrador = (e) => {\n\t\t// console.log('mousemove borrador');\n\t\tif (mouse.click) {\n\t\t\tcapturaPosPosprev(e);\n\t\t\tgraficaBorrador();\n\t\t}\n\t};\n\tconst mouseUpBorrador = (e) => {\n\t\t// console.log('mouseup borrador');\n\t\tcapturaPosPosprev(e);\n\t\tgraficaBorrador();\n\t\tmouse.click = false;\n\t};\n\t// LOGICA END.\n\n\t// useEffect:\n\tuseEffect(() => {\n\t\tif (stateBorrador.active) {\n\t\t\tlet canvasBorrador = document.getElementById(id_canvas);\n\t\t\t//canvasBorrador.addEventListener('click', saludar);\n\t\t\tcanvasBorradorDatos.top = canvasBorrador.getBoundingClientRect().top;\n\t\t\tcanvasBorradorDatos.left = canvasBorrador.getBoundingClientRect().left;\n\t\t\tcanvasBorradorDatos.width = canvasBorrador.getBoundingClientRect().width;\n\t\t\tcanvasBorradorDatos.height =\n\t\t\t\tcanvasBorrador.getBoundingClientRect().height;\n\n\t\t\tcanvasBorrador.addEventListener('mousedown', mouseDownBorrador);\n\t\t\tcanvasBorrador.addEventListener('mousemove', mouseMoveBorrador);\n\t\t\tcanvasBorrador.addEventListener('mouseup', mouseUpBorrador);\n\t\t}\n\t\treturn () => {\n\t\t\tlet canvasBorrador = document.getElementById(id_canvas);\n\t\t\t//canvasBorrador.removeEventListener('click', saludar);\n\n\t\t\tcanvasBorrador.removeEventListener('mousedown', mouseDownBorrador);\n\t\t\tcanvasBorrador.removeEventListener('mousemove', mouseMoveBorrador);\n\t\t\tcanvasBorrador.removeEventListener('mouseup', mouseUpBorrador);\n\t\t};\n\t}, [stateBorrador]);\n\n\t// RENDER:\n\t// return console.log('hola soy el borrador');\n};\n\nexport default PaintBorrador;\n","import React, { useContext, useEffect } from 'react';\n\n// CONTEXT:\nimport AppContextCanvas from '../context/AppContextCanvas';\nimport AppContextCuadrado from '../context/AppContextCuadrado';\nimport AppContextLinea from '../context/AppContextLinea';\nimport AppContextLapiz from '../context/AppContextLapiz';\nimport AppContextPlano from '../context/AppContextPlano';\n\n// utils:\nimport { utilsCuadricula_graficaCuadricula } from '../utils/UtilsCuadricula';\nimport {\n\tutilsCuadrado_graficaCuadrado,\n\tutilsCuadrado_graficaCuadradoHistoria,\n} from '../utils/UtilsCuadrado';\nimport { utilsLinea_graficaLineaHistoria } from '../utils/UtilsLinea';\nimport { utilsLapiz_graficaLapizHistoria } from '../utils/UtilsLapiz';\nimport { uPlano_graficaCuadradoHistoriaConEjes } from '../utils/UtilsPlano';\n\nconst PaintCuadrado = (id_canvas) => {\n\t// useContext:\n\tconst { stateCanvas } = useContext(AppContextCanvas);\n\tconst { stateCuadrado, add_cuadrado_en_historia } =\n\t\tuseContext(AppContextCuadrado);\n\tconst { stateLinea } = useContext(AppContextLinea);\n\tconst { stateLapiz } = useContext(AppContextLapiz);\n\tconst { statePlano } = useContext(AppContextPlano);\n\n\t// LOGICA:\n\tlet canvas = '';\n\tlet context = '';\n\tconst cuadrado = {\n\t\tid: 0,\n\t\tbordeEstado: stateCuadrado.bordeEstado,\n\t\tbordeGrosor: stateCuadrado.bordeGrosor,\n\t\tbordeColor: stateCuadrado.bordeColor,\n\t\tfondoEstado: stateCuadrado.fondoEstado,\n\t\tfondoColor: stateCuadrado.fondoColor,\n\t\tx_ini: 0,\n\t\ty_ini: 0,\n\t\tx_fin: 0,\n\t\ty_fin: 0,\n\t};\n\tconst mouse = {\n\t\tclick: false,\n\t\tmove: false,\n\t\tprimerClick: false,\n\t\tpos: { x: 0, y: 0 },\n\t\tpos_prev: { x: 0, y: 0 },\n\t};\n\tconst mouseReinicia = () => {\n\t\tmouse.click = false;\n\t\tmouse.move = false;\n\t\tmouse.primerClick = false;\n\t\tmouse.pos.x = 0;\n\t\tmouse.pos_prev.x = 0;\n\t\tmouse.pos.y = 0;\n\t\tmouse.pos_prev.y = 0;\n\t};\n\n\tconst canvasCuadradoDatos = {\n\t\ttop: 0,\n\t\tleft: 0,\n\t\twidth: 0,\n\t\theight: 0,\n\t};\n\tconst captura_Pos_Posprev = (e) => {\n\t\tconst x = e.clientX;\n\t\tconst y = e.clientY;\n\t\tconst x_real = x - canvasCuadradoDatos.left;\n\t\tconst y_real = y - canvasCuadradoDatos.top;\n\t\tmouse.pos_prev.x = mouse.pos.x;\n\t\tmouse.pos_prev.y = mouse.pos.y;\n\t\tmouse.pos.x = x_real;\n\t\tmouse.pos.y = y_real;\n\n\t\tif (mouse.primerClick) {\n\t\t\tcuadrado.x_ini = mouse.pos_prev.x;\n\t\t\tcuadrado.y_ini = mouse.pos_prev.y;\n\t\t\tmouse.primerClick = false;\n\t\t}\n\t\tcuadrado.x_fin = mouse.pos.x;\n\t\tcuadrado.y_fin = mouse.pos.y;\n\t};\n\tconst paint = () => {\n\t\tutilsCuadricula_graficaCuadricula(context, stateCanvas); // grafica cuadricula\n\t\tuPlano_graficaCuadradoHistoriaConEjes(context, statePlano.historiaPlano); // plano cartesiano\n\t\tutilsCuadrado_graficaCuadradoHistoria(\n\t\t\tcontext,\n\t\t\tstateCuadrado.historiaCuadrado\n\t\t);\n\t\tutilsLinea_graficaLineaHistoria(context, stateLinea.historiaLinea);\n\t\tutilsLapiz_graficaLapizHistoria(context, stateLapiz.historiaLapiz); // grafica historia de lapiz\n\t};\n\tconst mouseDownCuadrado = (e) => {\n\t\tmouse.click = true;\n\t\tcaptura_Pos_Posprev(e);\n\t};\n\tconst mouseMoveCuadrado = (e) => {\n\t\tif (mouse.click) {\n\t\t\tif (!mouse.move) {\n\t\t\t\tmouse.primerClick = true;\n\t\t\t\tmouse.move = true;\n\t\t\t}\n\t\t\tcaptura_Pos_Posprev(e);\n\t\t\tpaint();\n\t\t\tutilsCuadrado_graficaCuadrado(context, cuadrado);\n\t\t}\n\t};\n\tconst mouseUpCuadrado = (e) => {\n\t\t//captura_Pos_Posprev(e);\n\t\tif (mouse.click && mouse.pos_prev.x != 0 && mouse.pos_prev.y != 0) {\n\t\t\tcuadrado.id = stateCuadrado.historiaCuadrado.length;\n\t\t\tif (cuadrado.x_ini > cuadrado.x_fin) {\n\t\t\t\tlet aux = cuadrado.x_ini;\n\t\t\t\tcuadrado.x_ini = cuadrado.x_fin;\n\t\t\t\tcuadrado.x_fin = aux;\n\t\t\t}\n\t\t\tif (cuadrado.y_ini > cuadrado.y_fin) {\n\t\t\t\tlet aux = cuadrado.y_ini;\n\t\t\t\tcuadrado.y_ini = cuadrado.y_fin;\n\t\t\t\tcuadrado.y_fin = aux;\n\t\t\t}\n\t\t\tpaint();\n\t\t\tadd_cuadrado_en_historia(cuadrado);\n\t\t\tutilsCuadrado_graficaCuadrado(context, cuadrado);\n\t\t}\n\t\tmouseReinicia();\n\t};\n\tconst update_canvasCuadradoDatos = () => {\n\t\tcanvasCuadradoDatos.top = canvas.getBoundingClientRect().top;\n\t\tcanvasCuadradoDatos.left = canvas.getBoundingClientRect().left;\n\t\tcanvasCuadradoDatos.width = canvas.getBoundingClientRect().width;\n\t\tcanvasCuadradoDatos.height = canvas.getBoundingClientRect().height;\n\t};\n\t// LOGICA END.\n\n\t// useEffect:\n\tuseEffect(() => {\n\t\tcanvas = document.getElementById(id_canvas);\n\t\tcontext = canvas.getContext('2d');\n\n\t\tif (stateCuadrado.active) {\n\t\t\tupdate_canvasCuadradoDatos();\n\n\t\t\tcanvas.addEventListener('mousedown', mouseDownCuadrado);\n\t\t\tcanvas.addEventListener('mousemove', mouseMoveCuadrado);\n\t\t\tcanvas.addEventListener('mouseup', mouseUpCuadrado);\n\t\t}\n\t\treturn () => {\n\t\t\tcanvas.removeEventListener('mousedown', mouseDownCuadrado);\n\t\t\tcanvas.removeEventListener('mousemove', mouseMoveCuadrado);\n\t\t\tcanvas.removeEventListener('mouseup', mouseUpCuadrado);\n\t\t};\n\t}, [stateCuadrado]);\n\tuseEffect(() => {\n\t\t// console.log(stateCuadrado);\n\t}, [add_cuadrado_en_historia]);\n\n\t// return console.log('soy el paintCuadrado');\n};\n\nexport default PaintCuadrado;\n","import { useContext, useEffect } from 'react';\n\n// CONTEXT:\nimport AppContextCanvas from '../context/AppContextCanvas';\nimport AppContextCuadrado from '../context/AppContextCuadrado';\nimport AppContextLinea from '../context/AppContextLinea';\nimport AppContextLapiz from '../context/AppContextLapiz';\nimport AppContextPlano from '../context/AppContextPlano';\n\n// utils:\nimport { utilsCuadricula_graficaCuadricula } from '../utils/UtilsCuadricula';\nimport { utilsCuadrado_graficaCuadradoHistoria } from '../utils/UtilsCuadrado';\nimport {\n\tutilsLinea_graficaLinea,\n\tutilsLinea_graficaLineaHistoria,\n} from '../utils/UtilsLinea';\nimport { utilsLapiz_graficaLapizHistoria } from '../utils/UtilsLapiz';\nimport { uPlano_graficaCuadradoHistoriaConEjes } from '../utils/UtilsPlano';\n\nconst PaintLinea = (id_canvas) => {\n\t// useContext:\n\tconst { stateCanvas } = useContext(AppContextCanvas);\n\tconst { stateCuadrado } = useContext(AppContextCuadrado);\n\tconst { stateLinea, add_historiaLinea_id } = useContext(AppContextLinea);\n\tconst { stateLapiz } = useContext(AppContextLapiz);\n\tconst { statePlano } = useContext(AppContextPlano);\n\n\t// LOGICA:\n\tconst paint = () => {\n\t\tutilsCuadricula_graficaCuadricula(context, stateCanvas); // grafica cuadricula\n\t\tuPlano_graficaCuadradoHistoriaConEjes(context, statePlano.historiaPlano); // plano cartesiano\n\t\tutilsCuadrado_graficaCuadradoHistoria(\n\t\t\tcontext,\n\t\t\tstateCuadrado.historiaCuadrado\n\t\t);\n\t\tutilsLinea_graficaLineaHistoria(context, stateLinea.historiaLinea);\n\t\tutilsLapiz_graficaLapizHistoria(context, stateLapiz.historiaLapiz); // grafica historia de lapiz\n\t};\n\tlet canvas = '';\n\tlet context = '';\n\n\tconst canvasLineaDatos = {\n\t\ttop: 0,\n\t\tleft: 0,\n\t\twidth: 0,\n\t\theight: 0,\n\t};\n\tconst update_canvasLineaDatos = () => {\n\t\tcanvasLineaDatos.top = canvas.getBoundingClientRect().top;\n\t\tcanvasLineaDatos.left = canvas.getBoundingClientRect().left;\n\t\tcanvasLineaDatos.width = canvas.getBoundingClientRect().width;\n\t\tcanvasLineaDatos.height = canvas.getBoundingClientRect().height;\n\t};\n\n\tconst mouse = {\n\t\tclick: false,\n\t\tmove: false,\n\t\tprimerClick: false,\n\t\tpos: { x: 0, y: 0 },\n\t\tpos_prev: { x: 0, y: 0 },\n\t};\n\tconst mouseReinicia = () => {\n\t\tmouse.click = false;\n\t\tmouse.move = false;\n\t\tmouse.primerClick = false;\n\t\tmouse.pos.x = 0;\n\t\tmouse.pos_prev.x = 0;\n\t\tmouse.pos.y = 0;\n\t\tmouse.pos_prev.y = 0;\n\t};\n\tconst Linea = {\n\t\tid: stateLinea.id,\n\t\tgrosor: stateLinea.grosor,\n\t\tcolor: stateLinea.color,\n\t\tx_ini: 0,\n\t\ty_ini: 0,\n\t\tx_fin: 0,\n\t\ty_fin: 0,\n\t};\n\tconst captura_Pos_Posprev = (e) => {\n\t\tconst x = e.clientX;\n\t\tconst y = e.clientY;\n\t\tconst x_real = x - canvasLineaDatos.left;\n\t\tconst y_real = y - canvasLineaDatos.top;\n\t\tmouse.pos_prev.x = mouse.pos.x;\n\t\tmouse.pos_prev.y = mouse.pos.y;\n\t\tmouse.pos.x = x_real;\n\t\tmouse.pos.y = y_real;\n\n\t\tif (mouse.primerClick) {\n\t\t\tLinea.x_ini = mouse.pos_prev.x;\n\t\t\tLinea.y_ini = mouse.pos_prev.y;\n\t\t\tmouse.primerClick = false;\n\t\t}\n\t\tLinea.x_fin = mouse.pos.x;\n\t\tLinea.y_fin = mouse.pos.y;\n\t};\n\tconst mouseDownLinea = (e) => {\n\t\tmouse.click = true;\n\t\tcaptura_Pos_Posprev(e);\n\t};\n\tconst mouseMoveLinea = (e) => {\n\t\tif (mouse.click) {\n\t\t\tif (!mouse.move) {\n\t\t\t\tmouse.primerClick = true;\n\t\t\t\tmouse.move = true;\n\t\t\t}\n\t\t\tcaptura_Pos_Posprev(e);\n\t\t\tpaint();\n\t\t\tutilsLinea_graficaLinea(context, Linea); // utilsPaint_graficaLinea\n\t\t}\n\t};\n\tconst mouseUpLinea = () => {\n\t\tif (mouse.click && mouse.pos_prev.x != 0 && mouse.pos_prev.y != 0) {\n\t\t\tLinea.id = stateLinea.id;\n\t\t\tpaint();\n\t\t\tadd_historiaLinea_id(Linea, stateLinea.id + 1);\n\t\t\tutilsLinea_graficaLinea(context, Linea);\n\t\t}\n\t\tmouseReinicia();\n\t};\n\t// LOGICA END.\n\n\t// useEffect:\n\tuseEffect(() => {\n\t\tcanvas = document.getElementById(id_canvas);\n\t\tcontext = canvas.getContext('2d');\n\t\tif (stateLinea.active) {\n\t\t\tupdate_canvasLineaDatos();\n\t\t\tcanvas.addEventListener('mousedown', mouseDownLinea);\n\t\t\tcanvas.addEventListener('mousemove', mouseMoveLinea);\n\t\t\tcanvas.addEventListener('mouseup', mouseUpLinea);\n\t\t}\n\t\treturn () => {\n\t\t\tcanvas.removeEventListener('mousedown', mouseDownLinea);\n\t\t\tcanvas.removeEventListener('mousemove', mouseMoveLinea);\n\t\t\tcanvas.removeEventListener('mouseup', mouseUpLinea);\n\t\t};\n\t}, [stateLinea]);\n};\n\nexport default PaintLinea;\n","import React from 'react';\nimport Canvas from '../components/Canvas';\n\nimport '../styles/Home.scss';\n\nconst Home = () => {\n\t// const heightPantalla = screen.height - 180;\n\t// const widthPantalla = screen.width - 55;\n\treturn (\n\t\t<div className=\"home\">\n\t\t\t<Canvas />\n\t\t</div>\n\t);\n};\n\nexport default Home;\n","import React from 'react';\nimport Header from '../components/Header';\nimport NavIzq from '../components/NavIzq';\nimport Home from '../pages/Home';\n\nconst Layout = ({ children }) => {\n\treturn (\n\t\t<div className=\"Layout\">\n\t\t\t<Header />\n\t\t\t<NavIzq />\n\t\t\t<Home />\n\t\t\t{children}\n\t\t</div>\n\t);\n};\n\nexport default Layout;\n","import React from 'react';\nimport { BrowserRouter, Routes, Route } from 'react-router-dom';\n\n// CONTEXT:\nimport AppContext from '../context/AppContext';\nimport AppContextLapiz from '../context/AppContextLapiz';\nimport AppContextBorrador from '../context/AppContextBorrador';\nimport AppContextCuadrado from '../context/AppContextCuadrado';\nimport AppContextMover from '../context/AppContextMover';\nimport AppContextCanvas from '../context/AppContextCanvas';\nimport AppContextLinea from '../context/AppContextLinea';\nimport AppContextPlano from '../context/AppContextPlano';\n\n// HOOKS:\nimport useInitialState from '../hooks/useInitialState';\nimport useMover from '../hooks/useMover';\nimport useLapiz from '../hooks/useLapiz';\nimport useBorrador from '../hooks/useBorrador';\nimport useCuadrado from '../hooks/useCuadrado';\nimport useCanvas from '../hooks/useCanvas';\nimport useLinea from '../hooks/useLinea';\nimport usePlano from '../hooks/usePlano';\n\nimport Layout from '../containers/Layout';\nimport Home from '../pages/Home';\nimport '../styles/global.css';\n\nconst App = () => {\n\tconst initialState = useInitialState();\n\tconst initialStateMover = useMover();\n\tconst initialStateLapiz = useLapiz();\n\tconst initialStateBorrador = useBorrador();\n\tconst initialStateCuadrado = useCuadrado();\n\tconst initialStateCanvas = useCanvas();\n\tconst initialStateLinea = useLinea();\n\tconst initialStatePlano = usePlano();\n\n\treturn (\n\t\t<AppContext.Provider value={initialState}>\n\t\t\t<AppContextCanvas.Provider value={initialStateCanvas}>\n\t\t\t\t<AppContextMover.Provider value={initialStateMover}>\n\t\t\t\t\t<AppContextLapiz.Provider value={initialStateLapiz}>\n\t\t\t\t\t\t<AppContextBorrador.Provider value={initialStateBorrador}>\n\t\t\t\t\t\t\t<AppContextCuadrado.Provider value={initialStateCuadrado}>\n\t\t\t\t\t\t\t\t<AppContextLinea.Provider value={initialStateLinea}>\n\t\t\t\t\t\t\t\t\t<AppContextPlano.Provider value={initialStatePlano}>\n\t\t\t\t\t\t\t\t\t\t<BrowserRouter>\n\t\t\t\t\t\t\t\t\t\t\t<Layout>\n\t\t\t\t\t\t\t\t\t\t\t\t{/* <Routes>\n\t\t\t\t\t\t\t\t\t\t<Route exact path=\"/\" element={<Home />} />\n\t\t\t\t\t\t\t\t\t</Routes> */}\n\t\t\t\t\t\t\t\t\t\t\t</Layout>\n\t\t\t\t\t\t\t\t\t\t</BrowserRouter>\n\t\t\t\t\t\t\t\t\t</AppContextPlano.Provider>\n\t\t\t\t\t\t\t\t</AppContextLinea.Provider>\n\t\t\t\t\t\t\t</AppContextCuadrado.Provider>\n\t\t\t\t\t\t</AppContextBorrador.Provider>\n\t\t\t\t\t</AppContextLapiz.Provider>\n\t\t\t\t</AppContextMover.Provider>\n\t\t\t</AppContextCanvas.Provider>\n\t\t</AppContext.Provider>\n\t);\n};\n\nexport default App;\n","import React from 'react';\nimport ReactDom from 'react-dom';\nimport App from './routes/App';\n\nReactDom.render(<App />, document.getElementById('app'));\n","// The module cache\nvar __webpack_module_cache__ = {};\n\n// The require function\nfunction __webpack_require__(moduleId) {\n\t// Check if module is in cache\n\tvar cachedModule = __webpack_module_cache__[moduleId];\n\tif (cachedModule !== undefined) {\n\t\treturn cachedModule.exports;\n\t}\n\t// Create a new module (and put it into the cache)\n\tvar module = __webpack_module_cache__[moduleId] = {\n\t\t// no module.id needed\n\t\t// no module.loaded needed\n\t\texports: {}\n\t};\n\n\t// Execute the module function\n\t__webpack_modules__[moduleId](module, module.exports, __webpack_require__);\n\n\t// Return the exports of the module\n\treturn module.exports;\n}\n\n// expose the modules object (__webpack_modules__)\n__webpack_require__.m = __webpack_modules__;\n\n","// define getter functions for harmony exports\n__webpack_require__.d = function(exports, definition) {\n\tfor(var key in definition) {\n\t\tif(__webpack_require__.o(definition, key) && !__webpack_require__.o(exports, key)) {\n\t\t\tObject.defineProperty(exports, key, { enumerable: true, get: definition[key] });\n\t\t}\n\t}\n};","__webpack_require__.g = (function() {\n\tif (typeof globalThis === 'object') return globalThis;\n\ttry {\n\t\treturn this || new Function('return this')();\n\t} catch (e) {\n\t\tif (typeof window === 'object') return window;\n\t}\n})();","__webpack_require__.o = function(obj, prop) { return Object.prototype.hasOwnProperty.call(obj, prop); }","// no baseURI\n\n// object to store loaded and loading chunks\n// undefined = chunk not loaded, null = chunk preloaded/prefetched\n// [resolve, reject, Promise] = chunk loading, 0 = chunk loaded\nvar installedChunks = {\n\t179: 0\n};\n\n// no chunk on demand loading\n\n// no prefetching\n\n// no preloaded\n\n// no HMR\n\n// no HMR manifest\n\n__webpack_require__.O.j = function(chunkId) { return installedChunks[chunkId] === 0; };\n\n// install a JSONP callback for chunk loading\nvar webpackJsonpCallback = function(parentChunkLoadingFunction, data) {\n\tvar chunkIds = data[0];\n\tvar moreModules = data[1];\n\tvar runtime = data[2];\n\t// add \"moreModules\" to the modules object,\n\t// then flag all \"chunkIds\" as loaded and fire callback\n\tvar moduleId, chunkId, i = 0;\n\tif(chunkIds.some(function(id) { return installedChunks[id] !== 0; })) {\n\t\tfor(moduleId in moreModules) {\n\t\t\tif(__webpack_require__.o(moreModules, moduleId)) {\n\t\t\t\t__webpack_require__.m[moduleId] = moreModules[moduleId];\n\t\t\t}\n\t\t}\n\t\tif(runtime) var result = runtime(__webpack_require__);\n\t}\n\tif(parentChunkLoadingFunction) parentChunkLoadingFunction(data);\n\tfor(;i < chunkIds.length; i++) {\n\t\tchunkId = chunkIds[i];\n\t\tif(__webpack_require__.o(installedChunks, chunkId) && installedChunks[chunkId]) {\n\t\t\tinstalledChunks[chunkId][0]();\n\t\t}\n\t\tinstalledChunks[chunkIds[i]] = 0;\n\t}\n\treturn __webpack_require__.O(result);\n}\n\nvar chunkLoadingGlobal = self[\"webpackChunkmathboard\"] = self[\"webpackChunkmathboard\"] || [];\nchunkLoadingGlobal.forEach(webpackJsonpCallback.bind(null, 0));\nchunkLoadingGlobal.push = webpackJsonpCallback.bind(null, chunkLoadingGlobal.push.bind(chunkLoadingGlobal));","// startup\n// Load entry module and return exports\n// This entry module depends on other loaded chunks and execution need to be delayed\nvar __webpack_exports__ = __webpack_require__.O(undefined, [829], function() { return __webpack_require__(6310); })\n__webpack_exports__ = __webpack_require__.O(__webpack_exports__);\n"],"names":["deferred","React","initialState","alfabetoMay","split","alfabetoMin","alfabeto","active","color","colorFondo","grosor","state","setState","useState","toLowerCase","auxArray","toUpperCase","updateCanvasPaleta","optionIcon","console","log","updateColor","valor","updateColorFondo","updateGrosor","initialStateMover","stateMover","setStateMover","updateMoverActive","initialStateLapiz","historiaLapiz","stateLapiz","setStateLapiz","updateLapizActive","updateLapizColor","updateLapizGrosor","add_historiaLapiz","updateLapizColorGrosor","valor1","valor2","initialStateBorrador","historialBorrador","stateBorrador","setStateBorrador","updateBorradorActive","updateBorradorColor","updateBorradorGrosor","initialStateCuadrado","bordeEstado","bordeGrosor","bordeColor","fondoEstado","fondoColor","x_ini","y_ini","width","height","historiaCuadrado","stateCuadrado","setStateCuadrado","updateCuadradoActive","updateCuadradoBordeGrosor","updateCuadradoBordeEstado","updateCuadradoBorde_ColorEstado","estado","updateCuadradoFondoEstado","updateCuadradoFondo_ColorEstado","add_cuadrado_en_historia","cuadrado","update_cuadrado_en_historia","array","update_all","colorBorde","bordeEstadoIn","fondoEstadoIn","initialStateCanvas","id","cuadriculaWidth","lineaColor","lineaGrosor","tipoCuadricula","stateCanvas","setStateCanvas","updateCuadriculaActive","updateCuadriculaWidth","update_width_height","updateTipoCuadricula","initialStateLinea","historiaLinea","stateLinea","setStateLinea","updateLineaActive","updateLineaColor","updateLineaGrosor","add_historiaLinea","add_historiaLinea_id","updateLineaColorGrosor","initialStatePlano","x_min","y_max","salto","color_cuadricula","width_cuadricula","historiaPlano","statePlano","setStatePlano","updatePlanoActive","add_plano_en_historia","useContext","AppContextPlano","useEffect","className","type","defaultValue","value","AppContext","arrayPaletaColor","colorLine","tipo","updatePaletaColor","forEach","dato","document","getElementById","classList","remove","elem","find","add","title","map","onClick","handleColor","handlePaletaColor","src","iconLineaNone","arrayIconLinea","iconLine","iconLineaS","iconLineaM","iconLineaL","iconLineaXL","iconLineaXXL","updatePaletaGrosor","querySelectorAll","i","length","htmlFor","handleLineaGrosor","AppContextLapiz","AppContextBorrador","handleGrosor","opMatematica","parseInt","update","placeholder","disabled","AppContextCuadrado","AppContextCanvas","arrayIconCuadricula","iconCuadricula","iconCuadriculaSin","iconCuadriculaNone","updatePaleta_tipoCuadricula","handleBtnAncho","op","handleCuadriculaTipo","AppContextLinea","toggleMenu1","setToggleMenu1","toggleMenuMover","setToggleMenuMover","toggleMenuLapiz","setToggleMenuLapiz","toggleMenuBorrador","setToggleMenuBorrador","toggleMenuCuadrado","setToggleMenuCuadrado","toggleMenuCuadricula","setToggleMenuCuadricula","toggleMenuLinea","setToggleMenuLinea","toggleMenuPlano","setToggleMenuPlano","href","Menu1","element","key","handleClick","svg","toggleShift","setToggleShift","option","txt","elm","AppContextMover","AppContextCuadricula","toggleKeyboard","setToggleKeyboard","iconosPaleta","moverIcon","lapizIcon","borradorIcon","lineaIcon","cuadradoIcon","planoIcon","cuadriculaIcon","icon","handleIcon","keyboardIcon","utilsCuadricula_graficaCuadricula","context","canvas","lineWidth","strokeStyle","fillStyle","setLineDash","beginPath","moveTo","lineTo","fill","stroke","closePath","nroLineasV","incV","nroLineasH","incH","utilsCuadrado_graficaCuadrado","x_fin","y_fin","utilsCuadrado_graficaCuadradoHistoria","utilsLinea_graficaLinea","linea","utilsLinea_graficaLineaHistoria","utilsLapiz_graficaLapizHistoria","lapiz","sw","utilsLapiz_graficaLapiz","uPlano_graficaCuadrado","uPlano_graficaCuadradoConEjes","plano","x1","y1","y2","x2","utilsPlano_graficaCuadricula","Linea","x3","y3","utilsPlano_graficaTriangulo","arrayX","n","x","push","font","fillText","arrayY","heigth","y","textAlign","uPlano_graficaNumeros","uPlano_graficaCuadradoHistoriaConEjes","get_pts_redimencion","width_p","u_cuadradoSegmentado","get_pts_redimencion_linea","u_lineaSegmentado","u_planoSegmentado","u_lapizSegmentado","y_min","x_may","y_may","id_canvas","canvasPlanoDatos","top","left","mouse","click","move","primerClick","pos","pos_prev","captura_Pos_Posprev","e","clientX","clientY","x_real","y_real","mouseDownPlano","mouseMovePlano","uPlano_graficaCuadradoHistoria","mouseUpPlano","getContext","getBoundingClientRect","addEventListener","removeEventListener","canvasWidth","setCanvasWidth","window","innerWidth","canvasHeight","setCanvasHeight","innerHeight","canvasId","PaintCuadricula","paint","cuadradoSelect","lineaSelect","lapizSelect","planoSelect","mover_cuadrado","seleccionar_cuadrado_pts","cuadrado_punto_mover","cuadrado_pto","mover_linea","seleccionar_linea_pts","linea_punto_mover","linea_pto","mover_lapiz","plano_mover","plano_seleccionar_pts","plano_pto_mover","plano_pto","canvasMoverDatos","busca_cuadrado_ptoClick","resp","mouseDownMover","u_getLapiz","arrayPts","busca_linea_ptoClick","p","a","b","dnum","Math","sqrt","u_getLinea","u_getCuadrado","get_pts_redimencion_plano","u_getPlano","mouseMoveMover","recorrido_x","recorrido_y","u_moverCuadrado","u_updateZiseCuadrado","u_moverLinea","u_updateZiseLinea","u_moverLapiz","u_moverPlano","u_updateZisePlano","mouseUpMover","aux","PaintMover","lapizNew","lapizLinea","canvasLapizDatos","graficaLinea","mouseDownLapiz","mouseMoveLapiz","mouseUpLapiz","PainLapiz","canvasBorradorDatos","clickReal","capturaPosPosprev","graficaBorrador","mouseDownBorrador","mouseMoveBorrador","mouseUpBorrador","canvasBorrador","PaintBorrador","canvasCuadradoDatos","mouseDownCuadrado","mouseMoveCuadrado","mouseUpCuadrado","PaintCuadrado","canvasLineaDatos","mouseDownLinea","mouseMoveLinea","mouseUpLinea","PaintLinea","PaintPlano","updateCanvasWidth","updateCanvasHeight","children","useInitialState","useMover","useLapiz","useBorrador","useCuadrado","useCanvas","useLinea","usePlano","ReactDom","__webpack_module_cache__","__webpack_require__","moduleId","cachedModule","undefined","exports","module","__webpack_modules__","m","O","result","chunkIds","fn","priority","notFulfilled","Infinity","fulfilled","j","Object","keys","every","splice","r","d","definition","o","defineProperty","enumerable","get","g","globalThis","this","Function","obj","prop","prototype","hasOwnProperty","call","installedChunks","chunkId","webpackJsonpCallback","parentChunkLoadingFunction","data","moreModules","runtime","some","chunkLoadingGlobal","self","bind","__webpack_exports__"],"sourceRoot":""}